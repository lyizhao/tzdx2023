// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base_data.proto

#ifndef PROTOBUF_INCLUDED_base_5fdata_2eproto
#define PROTOBUF_INCLUDED_base_5fdata_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto 

namespace protobuf_base_5fdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_base_5fdata_2eproto
namespace tzdx {
namespace comm_proto {
class BasePacket;
class BasePacketDefaultTypeInternal;
extern BasePacketDefaultTypeInternal _BasePacket_default_instance_;
class Bspline;
class BsplineDefaultTypeInternal;
extern BsplineDefaultTypeInternal _Bspline_default_instance_;
class ChunkData;
class ChunkDataDefaultTypeInternal;
extern ChunkDataDefaultTypeInternal _ChunkData_default_instance_;
class ChunkStamps;
class ChunkStampsDefaultTypeInternal;
extern ChunkStampsDefaultTypeInternal _ChunkStamps_default_instance_;
class DroneState;
class DroneStateDefaultTypeInternal;
extern DroneStateDefaultTypeInternal _DroneState_default_instance_;
class ExplorationMsg;
class ExplorationMsgDefaultTypeInternal;
extern ExplorationMsgDefaultTypeInternal _ExplorationMsg_default_instance_;
class IdxList;
class IdxListDefaultTypeInternal;
extern IdxListDefaultTypeInternal _IdxList_default_instance_;
class PairOpt;
class PairOptDefaultTypeInternal;
extern PairOptDefaultTypeInternal _PairOpt_default_instance_;
class PairOptRes;
class PairOptResDefaultTypeInternal;
extern PairOptResDefaultTypeInternal _PairOptRes_default_instance_;
class PointCloudXYZIBody;
class PointCloudXYZIBodyDefaultTypeInternal;
extern PointCloudXYZIBodyDefaultTypeInternal _PointCloudXYZIBody_default_instance_;
class PointXYZ;
class PointXYZDefaultTypeInternal;
extern PointXYZDefaultTypeInternal _PointXYZ_default_instance_;
class PointXYZI;
class PointXYZIDefaultTypeInternal;
extern PointXYZIDefaultTypeInternal _PointXYZI_default_instance_;
}  // namespace comm_proto
}  // namespace tzdx
namespace google {
namespace protobuf {
template<> ::tzdx::comm_proto::BasePacket* Arena::CreateMaybeMessage<::tzdx::comm_proto::BasePacket>(Arena*);
template<> ::tzdx::comm_proto::Bspline* Arena::CreateMaybeMessage<::tzdx::comm_proto::Bspline>(Arena*);
template<> ::tzdx::comm_proto::ChunkData* Arena::CreateMaybeMessage<::tzdx::comm_proto::ChunkData>(Arena*);
template<> ::tzdx::comm_proto::ChunkStamps* Arena::CreateMaybeMessage<::tzdx::comm_proto::ChunkStamps>(Arena*);
template<> ::tzdx::comm_proto::DroneState* Arena::CreateMaybeMessage<::tzdx::comm_proto::DroneState>(Arena*);
template<> ::tzdx::comm_proto::ExplorationMsg* Arena::CreateMaybeMessage<::tzdx::comm_proto::ExplorationMsg>(Arena*);
template<> ::tzdx::comm_proto::IdxList* Arena::CreateMaybeMessage<::tzdx::comm_proto::IdxList>(Arena*);
template<> ::tzdx::comm_proto::PairOpt* Arena::CreateMaybeMessage<::tzdx::comm_proto::PairOpt>(Arena*);
template<> ::tzdx::comm_proto::PairOptRes* Arena::CreateMaybeMessage<::tzdx::comm_proto::PairOptRes>(Arena*);
template<> ::tzdx::comm_proto::PointCloudXYZIBody* Arena::CreateMaybeMessage<::tzdx::comm_proto::PointCloudXYZIBody>(Arena*);
template<> ::tzdx::comm_proto::PointXYZ* Arena::CreateMaybeMessage<::tzdx::comm_proto::PointXYZ>(Arena*);
template<> ::tzdx::comm_proto::PointXYZI* Arena::CreateMaybeMessage<::tzdx::comm_proto::PointXYZI>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tzdx {
namespace comm_proto {

enum PacketType {
  PACKET_NONE = 0,
  PACKET_HEARBEAT = 1,
  PACKET_MAP = 2,
  PACKET_NAV = 3,
  PacketType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PacketType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PacketType_IsValid(int value);
const PacketType PacketType_MIN = PACKET_NONE;
const PacketType PacketType_MAX = PACKET_NAV;
const int PacketType_ARRAYSIZE = PacketType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PacketType_descriptor();
inline const ::std::string& PacketType_Name(PacketType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PacketType_descriptor(), value);
}
inline bool PacketType_Parse(
    const ::std::string& name, PacketType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PacketType>(
    PacketType_descriptor(), name, value);
}
// ===================================================================

class PointXYZI : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.PointXYZI) */ {
 public:
  PointXYZI();
  virtual ~PointXYZI();

  PointXYZI(const PointXYZI& from);

  inline PointXYZI& operator=(const PointXYZI& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PointXYZI(PointXYZI&& from) noexcept
    : PointXYZI() {
    *this = ::std::move(from);
  }

  inline PointXYZI& operator=(PointXYZI&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PointXYZI& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PointXYZI* internal_default_instance() {
    return reinterpret_cast<const PointXYZI*>(
               &_PointXYZI_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PointXYZI* other);
  friend void swap(PointXYZI& a, PointXYZI& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PointXYZI* New() const final {
    return CreateMaybeMessage<PointXYZI>(NULL);
  }

  PointXYZI* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PointXYZI>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PointXYZI& from);
  void MergeFrom(const PointXYZI& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PointXYZI* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // float intensity = 4;
  void clear_intensity();
  static const int kIntensityFieldNumber = 4;
  float intensity() const;
  void set_intensity(float value);

  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.PointXYZI)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  float intensity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PointCloudXYZIBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.PointCloudXYZIBody) */ {
 public:
  PointCloudXYZIBody();
  virtual ~PointCloudXYZIBody();

  PointCloudXYZIBody(const PointCloudXYZIBody& from);

  inline PointCloudXYZIBody& operator=(const PointCloudXYZIBody& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PointCloudXYZIBody(PointCloudXYZIBody&& from) noexcept
    : PointCloudXYZIBody() {
    *this = ::std::move(from);
  }

  inline PointCloudXYZIBody& operator=(PointCloudXYZIBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PointCloudXYZIBody& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PointCloudXYZIBody* internal_default_instance() {
    return reinterpret_cast<const PointCloudXYZIBody*>(
               &_PointCloudXYZIBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PointCloudXYZIBody* other);
  friend void swap(PointCloudXYZIBody& a, PointCloudXYZIBody& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PointCloudXYZIBody* New() const final {
    return CreateMaybeMessage<PointCloudXYZIBody>(NULL);
  }

  PointCloudXYZIBody* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PointCloudXYZIBody>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PointCloudXYZIBody& from);
  void MergeFrom(const PointCloudXYZIBody& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PointCloudXYZIBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tzdx.comm_proto.PointXYZI points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  ::tzdx::comm_proto::PointXYZI* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::PointXYZI >*
      mutable_points();
  const ::tzdx::comm_proto::PointXYZI& points(int index) const;
  ::tzdx::comm_proto::PointXYZI* add_points();
  const ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::PointXYZI >&
      points() const;

  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.PointCloudXYZIBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::PointXYZI > points_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdxList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.IdxList) */ {
 public:
  IdxList();
  virtual ~IdxList();

  IdxList(const IdxList& from);

  inline IdxList& operator=(const IdxList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxList(IdxList&& from) noexcept
    : IdxList() {
    *this = ::std::move(from);
  }

  inline IdxList& operator=(IdxList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IdxList* internal_default_instance() {
    return reinterpret_cast<const IdxList*>(
               &_IdxList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(IdxList* other);
  friend void swap(IdxList& a, IdxList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxList* New() const final {
    return CreateMaybeMessage<IdxList>(NULL);
  }

  IdxList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IdxList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IdxList& from);
  void MergeFrom(const IdxList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdxList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 idx = 1;
  int idx_size() const;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::google::protobuf::int32 idx(int index) const;
  void set_idx(int index, ::google::protobuf::int32 value);
  void add_idx(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      idx() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_idx();

  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.IdxList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > idx_;
  mutable int _idx_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PointXYZ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.PointXYZ) */ {
 public:
  PointXYZ();
  virtual ~PointXYZ();

  PointXYZ(const PointXYZ& from);

  inline PointXYZ& operator=(const PointXYZ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PointXYZ(PointXYZ&& from) noexcept
    : PointXYZ() {
    *this = ::std::move(from);
  }

  inline PointXYZ& operator=(PointXYZ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PointXYZ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PointXYZ* internal_default_instance() {
    return reinterpret_cast<const PointXYZ*>(
               &_PointXYZ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PointXYZ* other);
  friend void swap(PointXYZ& a, PointXYZ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PointXYZ* New() const final {
    return CreateMaybeMessage<PointXYZ>(NULL);
  }

  PointXYZ* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PointXYZ>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PointXYZ& from);
  void MergeFrom(const PointXYZ& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PointXYZ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.PointXYZ)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChunkData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.ChunkData) */ {
 public:
  ChunkData();
  virtual ~ChunkData();

  ChunkData(const ChunkData& from);

  inline ChunkData& operator=(const ChunkData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChunkData(ChunkData&& from) noexcept
    : ChunkData() {
    *this = ::std::move(from);
  }

  inline ChunkData& operator=(ChunkData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChunkData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChunkData* internal_default_instance() {
    return reinterpret_cast<const ChunkData*>(
               &_ChunkData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ChunkData* other);
  friend void swap(ChunkData& a, ChunkData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChunkData* New() const final {
    return CreateMaybeMessage<ChunkData>(NULL);
  }

  ChunkData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChunkData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChunkData& from);
  void MergeFrom(const ChunkData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChunkData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 voxel_adrs = 9;
  int voxel_adrs_size() const;
  void clear_voxel_adrs();
  static const int kVoxelAdrsFieldNumber = 9;
  ::google::protobuf::int32 voxel_adrs(int index) const;
  void set_voxel_adrs(int index, ::google::protobuf::int32 value);
  void add_voxel_adrs(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      voxel_adrs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_voxel_adrs();

  // repeated int32 voxel_occ_ = 10;
  int voxel_occ__size() const;
  void clear_voxel_occ_();
  static const int kVoxelOccFieldNumber = 10;
  ::google::protobuf::int32 voxel_occ_(int index) const;
  void set_voxel_occ_(int index, ::google::protobuf::int32 value);
  void add_voxel_occ_(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      voxel_occ_() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_voxel_occ_();

  // int32 chunk_drone_id = 1;
  void clear_chunk_drone_id();
  static const int kChunkDroneIdFieldNumber = 1;
  ::google::protobuf::int32 chunk_drone_id() const;
  void set_chunk_drone_id(::google::protobuf::int32 value);

  // int32 from_drone_id = 2;
  void clear_from_drone_id();
  static const int kFromDroneIdFieldNumber = 2;
  ::google::protobuf::int32 from_drone_id() const;
  void set_from_drone_id(::google::protobuf::int32 value);

  // int32 idx = 3;
  void clear_idx();
  static const int kIdxFieldNumber = 3;
  ::google::protobuf::int32 idx() const;
  void set_idx(::google::protobuf::int32 value);

  // int32 latest_idx = 4;
  void clear_latest_idx();
  static const int kLatestIdxFieldNumber = 4;
  ::google::protobuf::int32 latest_idx() const;
  void set_latest_idx(::google::protobuf::int32 value);

  // double pos_x = 5;
  void clear_pos_x();
  static const int kPosXFieldNumber = 5;
  double pos_x() const;
  void set_pos_x(double value);

  // double pos_y = 6;
  void clear_pos_y();
  static const int kPosYFieldNumber = 6;
  double pos_y() const;
  void set_pos_y(double value);

  // double pos_z = 7;
  void clear_pos_z();
  static const int kPosZFieldNumber = 7;
  double pos_z() const;
  void set_pos_z(double value);

  // int32 to_drone_id = 8;
  void clear_to_drone_id();
  static const int kToDroneIdFieldNumber = 8;
  ::google::protobuf::int32 to_drone_id() const;
  void set_to_drone_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.ChunkData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > voxel_adrs_;
  mutable int _voxel_adrs_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > voxel_occ__;
  mutable int _voxel_occ__cached_byte_size_;
  ::google::protobuf::int32 chunk_drone_id_;
  ::google::protobuf::int32 from_drone_id_;
  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 latest_idx_;
  double pos_x_;
  double pos_y_;
  double pos_z_;
  ::google::protobuf::int32 to_drone_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChunkStamps : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.ChunkStamps) */ {
 public:
  ChunkStamps();
  virtual ~ChunkStamps();

  ChunkStamps(const ChunkStamps& from);

  inline ChunkStamps& operator=(const ChunkStamps& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChunkStamps(ChunkStamps&& from) noexcept
    : ChunkStamps() {
    *this = ::std::move(from);
  }

  inline ChunkStamps& operator=(ChunkStamps&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChunkStamps& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChunkStamps* internal_default_instance() {
    return reinterpret_cast<const ChunkStamps*>(
               &_ChunkStamps_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ChunkStamps* other);
  friend void swap(ChunkStamps& a, ChunkStamps& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChunkStamps* New() const final {
    return CreateMaybeMessage<ChunkStamps>(NULL);
  }

  ChunkStamps* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChunkStamps>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChunkStamps& from);
  void MergeFrom(const ChunkStamps& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChunkStamps* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tzdx.comm_proto.IdxList idxlists = 2;
  int idxlists_size() const;
  void clear_idxlists();
  static const int kIdxlistsFieldNumber = 2;
  ::tzdx::comm_proto::IdxList* mutable_idxlists(int index);
  ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::IdxList >*
      mutable_idxlists();
  const ::tzdx::comm_proto::IdxList& idxlists(int index) const;
  ::tzdx::comm_proto::IdxList* add_idxlists();
  const ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::IdxList >&
      idxlists() const;

  // double time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  double time() const;
  void set_time(double value);

  // int32 from_drone_id = 1;
  void clear_from_drone_id();
  static const int kFromDroneIdFieldNumber = 1;
  ::google::protobuf::int32 from_drone_id() const;
  void set_from_drone_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.ChunkStamps)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::IdxList > idxlists_;
  double time_;
  ::google::protobuf::int32 from_drone_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Bspline : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.Bspline) */ {
 public:
  Bspline();
  virtual ~Bspline();

  Bspline(const Bspline& from);

  inline Bspline& operator=(const Bspline& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bspline(Bspline&& from) noexcept
    : Bspline() {
    *this = ::std::move(from);
  }

  inline Bspline& operator=(Bspline&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Bspline& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bspline* internal_default_instance() {
    return reinterpret_cast<const Bspline*>(
               &_Bspline_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Bspline* other);
  friend void swap(Bspline& a, Bspline& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bspline* New() const final {
    return CreateMaybeMessage<Bspline>(NULL);
  }

  Bspline* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bspline>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bspline& from);
  void MergeFrom(const Bspline& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bspline* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double knots = 5;
  int knots_size() const;
  void clear_knots();
  static const int kKnotsFieldNumber = 5;
  double knots(int index) const;
  void set_knots(int index, double value);
  void add_knots(double value);
  const ::google::protobuf::RepeatedField< double >&
      knots() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_knots();

  // repeated double yaw_pts = 6;
  int yaw_pts_size() const;
  void clear_yaw_pts();
  static const int kYawPtsFieldNumber = 6;
  double yaw_pts(int index) const;
  void set_yaw_pts(int index, double value);
  void add_yaw_pts(double value);
  const ::google::protobuf::RepeatedField< double >&
      yaw_pts() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_yaw_pts();

  // repeated .tzdx.comm_proto.PointXYZ pos_pts = 7;
  int pos_pts_size() const;
  void clear_pos_pts();
  static const int kPosPtsFieldNumber = 7;
  ::tzdx::comm_proto::PointXYZ* mutable_pos_pts(int index);
  ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::PointXYZ >*
      mutable_pos_pts();
  const ::tzdx::comm_proto::PointXYZ& pos_pts(int index) const;
  ::tzdx::comm_proto::PointXYZ* add_pos_pts();
  const ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::PointXYZ >&
      pos_pts() const;

  // int32 drone_id = 1;
  void clear_drone_id();
  static const int kDroneIdFieldNumber = 1;
  ::google::protobuf::int32 drone_id() const;
  void set_drone_id(::google::protobuf::int32 value);

  // int32 order = 2;
  void clear_order();
  static const int kOrderFieldNumber = 2;
  ::google::protobuf::int32 order() const;
  void set_order(::google::protobuf::int32 value);

  // double yaw_dt = 4;
  void clear_yaw_dt();
  static const int kYawDtFieldNumber = 4;
  double yaw_dt() const;
  void set_yaw_dt(double value);

  // int32 traj_id = 3;
  void clear_traj_id();
  static const int kTrajIdFieldNumber = 3;
  ::google::protobuf::int32 traj_id() const;
  void set_traj_id(::google::protobuf::int32 value);

  // int32 secs = 8;
  void clear_secs();
  static const int kSecsFieldNumber = 8;
  ::google::protobuf::int32 secs() const;
  void set_secs(::google::protobuf::int32 value);

  // int32 nsecs = 9;
  void clear_nsecs();
  static const int kNsecsFieldNumber = 9;
  ::google::protobuf::int32 nsecs() const;
  void set_nsecs(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.Bspline)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > knots_;
  mutable int _knots_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > yaw_pts_;
  mutable int _yaw_pts_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::PointXYZ > pos_pts_;
  ::google::protobuf::int32 drone_id_;
  ::google::protobuf::int32 order_;
  double yaw_dt_;
  ::google::protobuf::int32 traj_id_;
  ::google::protobuf::int32 secs_;
  ::google::protobuf::int32 nsecs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DroneState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.DroneState) */ {
 public:
  DroneState();
  virtual ~DroneState();

  DroneState(const DroneState& from);

  inline DroneState& operator=(const DroneState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DroneState(DroneState&& from) noexcept
    : DroneState() {
    *this = ::std::move(from);
  }

  inline DroneState& operator=(DroneState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DroneState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DroneState* internal_default_instance() {
    return reinterpret_cast<const DroneState*>(
               &_DroneState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DroneState* other);
  friend void swap(DroneState& a, DroneState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DroneState* New() const final {
    return CreateMaybeMessage<DroneState>(NULL);
  }

  DroneState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DroneState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DroneState& from);
  void MergeFrom(const DroneState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DroneState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 grid_ids = 3;
  int grid_ids_size() const;
  void clear_grid_ids();
  static const int kGridIdsFieldNumber = 3;
  ::google::protobuf::int32 grid_ids(int index) const;
  void set_grid_ids(int index, ::google::protobuf::int32 value);
  void add_grid_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      grid_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_grid_ids();

  // repeated float pos = 4;
  int pos_size() const;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  float pos(int index) const;
  void set_pos(int index, float value);
  void add_pos(float value);
  const ::google::protobuf::RepeatedField< float >&
      pos() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_pos();

  // repeated float vel = 8;
  int vel_size() const;
  void clear_vel();
  static const int kVelFieldNumber = 8;
  float vel(int index) const;
  void set_vel(int index, float value);
  void add_vel(float value);
  const ::google::protobuf::RepeatedField< float >&
      vel() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_vel();

  // .tzdx.comm_proto.PointXYZ goal_posit = 2;
  bool has_goal_posit() const;
  void clear_goal_posit();
  static const int kGoalPositFieldNumber = 2;
  private:
  const ::tzdx::comm_proto::PointXYZ& _internal_goal_posit() const;
  public:
  const ::tzdx::comm_proto::PointXYZ& goal_posit() const;
  ::tzdx::comm_proto::PointXYZ* release_goal_posit();
  ::tzdx::comm_proto::PointXYZ* mutable_goal_posit();
  void set_allocated_goal_posit(::tzdx::comm_proto::PointXYZ* goal_posit);

  // int32 drone_id = 1;
  void clear_drone_id();
  static const int kDroneIdFieldNumber = 1;
  ::google::protobuf::int32 drone_id() const;
  void set_drone_id(::google::protobuf::int32 value);

  // int32 role = 6;
  void clear_role();
  static const int kRoleFieldNumber = 6;
  ::google::protobuf::int32 role() const;
  void set_role(::google::protobuf::int32 value);

  // double recent_attempt_time = 5;
  void clear_recent_attempt_time();
  static const int kRecentAttemptTimeFieldNumber = 5;
  double recent_attempt_time() const;
  void set_recent_attempt_time(double value);

  // double stamp = 7;
  void clear_stamp();
  static const int kStampFieldNumber = 7;
  double stamp() const;
  void set_stamp(double value);

  // float yaw = 9;
  void clear_yaw();
  static const int kYawFieldNumber = 9;
  float yaw() const;
  void set_yaw(float value);

  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.DroneState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > grid_ids_;
  mutable int _grid_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > pos_;
  mutable int _pos_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > vel_;
  mutable int _vel_cached_byte_size_;
  ::tzdx::comm_proto::PointXYZ* goal_posit_;
  ::google::protobuf::int32 drone_id_;
  ::google::protobuf::int32 role_;
  double recent_attempt_time_;
  double stamp_;
  float yaw_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PairOpt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.PairOpt) */ {
 public:
  PairOpt();
  virtual ~PairOpt();

  PairOpt(const PairOpt& from);

  inline PairOpt& operator=(const PairOpt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PairOpt(PairOpt&& from) noexcept
    : PairOpt() {
    *this = ::std::move(from);
  }

  inline PairOpt& operator=(PairOpt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PairOpt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PairOpt* internal_default_instance() {
    return reinterpret_cast<const PairOpt*>(
               &_PairOpt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(PairOpt* other);
  friend void swap(PairOpt& a, PairOpt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PairOpt* New() const final {
    return CreateMaybeMessage<PairOpt>(NULL);
  }

  PairOpt* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PairOpt>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PairOpt& from);
  void MergeFrom(const PairOpt& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PairOpt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ego_ids = 6;
  int ego_ids_size() const;
  void clear_ego_ids();
  static const int kEgoIdsFieldNumber = 6;
  ::google::protobuf::int32 ego_ids(int index) const;
  void set_ego_ids(int index, ::google::protobuf::int32 value);
  void add_ego_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ego_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ego_ids();

  // repeated int32 other_ids = 7;
  int other_ids_size() const;
  void clear_other_ids();
  static const int kOtherIdsFieldNumber = 7;
  ::google::protobuf::int32 other_ids(int index) const;
  void set_other_ids(int index, ::google::protobuf::int32 value);
  void add_other_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      other_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_other_ids();

  // .tzdx.comm_proto.PointXYZ ego_posit = 1;
  bool has_ego_posit() const;
  void clear_ego_posit();
  static const int kEgoPositFieldNumber = 1;
  private:
  const ::tzdx::comm_proto::PointXYZ& _internal_ego_posit() const;
  public:
  const ::tzdx::comm_proto::PointXYZ& ego_posit() const;
  ::tzdx::comm_proto::PointXYZ* release_ego_posit();
  ::tzdx::comm_proto::PointXYZ* mutable_ego_posit();
  void set_allocated_ego_posit(::tzdx::comm_proto::PointXYZ* ego_posit);

  // .tzdx.comm_proto.PointXYZ other_posit = 3;
  bool has_other_posit() const;
  void clear_other_posit();
  static const int kOtherPositFieldNumber = 3;
  private:
  const ::tzdx::comm_proto::PointXYZ& _internal_other_posit() const;
  public:
  const ::tzdx::comm_proto::PointXYZ& other_posit() const;
  ::tzdx::comm_proto::PointXYZ* release_other_posit();
  ::tzdx::comm_proto::PointXYZ* mutable_other_posit();
  void set_allocated_other_posit(::tzdx::comm_proto::PointXYZ* other_posit);

  // int32 from_drone_id = 2;
  void clear_from_drone_id();
  static const int kFromDroneIdFieldNumber = 2;
  ::google::protobuf::int32 from_drone_id() const;
  void set_from_drone_id(::google::protobuf::int32 value);

  // int32 to_drone_id = 5;
  void clear_to_drone_id();
  static const int kToDroneIdFieldNumber = 5;
  ::google::protobuf::int32 to_drone_id() const;
  void set_to_drone_id(::google::protobuf::int32 value);

  // double stamp = 4;
  void clear_stamp();
  static const int kStampFieldNumber = 4;
  double stamp() const;
  void set_stamp(double value);

  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.PairOpt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ego_ids_;
  mutable int _ego_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > other_ids_;
  mutable int _other_ids_cached_byte_size_;
  ::tzdx::comm_proto::PointXYZ* ego_posit_;
  ::tzdx::comm_proto::PointXYZ* other_posit_;
  ::google::protobuf::int32 from_drone_id_;
  ::google::protobuf::int32 to_drone_id_;
  double stamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PairOptRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.PairOptRes) */ {
 public:
  PairOptRes();
  virtual ~PairOptRes();

  PairOptRes(const PairOptRes& from);

  inline PairOptRes& operator=(const PairOptRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PairOptRes(PairOptRes&& from) noexcept
    : PairOptRes() {
    *this = ::std::move(from);
  }

  inline PairOptRes& operator=(PairOptRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PairOptRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PairOptRes* internal_default_instance() {
    return reinterpret_cast<const PairOptRes*>(
               &_PairOptRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(PairOptRes* other);
  friend void swap(PairOptRes& a, PairOptRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PairOptRes* New() const final {
    return CreateMaybeMessage<PairOptRes>(NULL);
  }

  PairOptRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PairOptRes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PairOptRes& from);
  void MergeFrom(const PairOptRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PairOptRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double stamp = 2;
  void clear_stamp();
  static const int kStampFieldNumber = 2;
  double stamp() const;
  void set_stamp(double value);

  // int32 from_drone_id = 1;
  void clear_from_drone_id();
  static const int kFromDroneIdFieldNumber = 1;
  ::google::protobuf::int32 from_drone_id() const;
  void set_from_drone_id(::google::protobuf::int32 value);

  // int32 status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // int32 to_drone_id = 4;
  void clear_to_drone_id();
  static const int kToDroneIdFieldNumber = 4;
  ::google::protobuf::int32 to_drone_id() const;
  void set_to_drone_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.PairOptRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double stamp_;
  ::google::protobuf::int32 from_drone_id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 to_drone_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExplorationMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.ExplorationMsg) */ {
 public:
  ExplorationMsg();
  virtual ~ExplorationMsg();

  ExplorationMsg(const ExplorationMsg& from);

  inline ExplorationMsg& operator=(const ExplorationMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplorationMsg(ExplorationMsg&& from) noexcept
    : ExplorationMsg() {
    *this = ::std::move(from);
  }

  inline ExplorationMsg& operator=(ExplorationMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplorationMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplorationMsg* internal_default_instance() {
    return reinterpret_cast<const ExplorationMsg*>(
               &_ExplorationMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ExplorationMsg* other);
  friend void swap(ExplorationMsg& a, ExplorationMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplorationMsg* New() const final {
    return CreateMaybeMessage<ExplorationMsg>(NULL);
  }

  ExplorationMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExplorationMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExplorationMsg& from);
  void MergeFrom(const ExplorationMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExplorationMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 flag = 7;
  int flag_size() const;
  void clear_flag();
  static const int kFlagFieldNumber = 7;
  ::google::protobuf::int32 flag(int index) const;
  void set_flag(int index, ::google::protobuf::int32 value);
  void add_flag(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      flag() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_flag();

  // .tzdx.comm_proto.ChunkData chunkdata = 1;
  bool has_chunkdata() const;
  void clear_chunkdata();
  static const int kChunkdataFieldNumber = 1;
  private:
  const ::tzdx::comm_proto::ChunkData& _internal_chunkdata() const;
  public:
  const ::tzdx::comm_proto::ChunkData& chunkdata() const;
  ::tzdx::comm_proto::ChunkData* release_chunkdata();
  ::tzdx::comm_proto::ChunkData* mutable_chunkdata();
  void set_allocated_chunkdata(::tzdx::comm_proto::ChunkData* chunkdata);

  // .tzdx.comm_proto.ChunkStamps chunkstamps = 2;
  bool has_chunkstamps() const;
  void clear_chunkstamps();
  static const int kChunkstampsFieldNumber = 2;
  private:
  const ::tzdx::comm_proto::ChunkStamps& _internal_chunkstamps() const;
  public:
  const ::tzdx::comm_proto::ChunkStamps& chunkstamps() const;
  ::tzdx::comm_proto::ChunkStamps* release_chunkstamps();
  ::tzdx::comm_proto::ChunkStamps* mutable_chunkstamps();
  void set_allocated_chunkstamps(::tzdx::comm_proto::ChunkStamps* chunkstamps);

  // .tzdx.comm_proto.Bspline bsp = 3;
  bool has_bsp() const;
  void clear_bsp();
  static const int kBspFieldNumber = 3;
  private:
  const ::tzdx::comm_proto::Bspline& _internal_bsp() const;
  public:
  const ::tzdx::comm_proto::Bspline& bsp() const;
  ::tzdx::comm_proto::Bspline* release_bsp();
  ::tzdx::comm_proto::Bspline* mutable_bsp();
  void set_allocated_bsp(::tzdx::comm_proto::Bspline* bsp);

  // .tzdx.comm_proto.DroneState dronestate = 4;
  bool has_dronestate() const;
  void clear_dronestate();
  static const int kDronestateFieldNumber = 4;
  private:
  const ::tzdx::comm_proto::DroneState& _internal_dronestate() const;
  public:
  const ::tzdx::comm_proto::DroneState& dronestate() const;
  ::tzdx::comm_proto::DroneState* release_dronestate();
  ::tzdx::comm_proto::DroneState* mutable_dronestate();
  void set_allocated_dronestate(::tzdx::comm_proto::DroneState* dronestate);

  // .tzdx.comm_proto.PairOpt pairopt = 5;
  bool has_pairopt() const;
  void clear_pairopt();
  static const int kPairoptFieldNumber = 5;
  private:
  const ::tzdx::comm_proto::PairOpt& _internal_pairopt() const;
  public:
  const ::tzdx::comm_proto::PairOpt& pairopt() const;
  ::tzdx::comm_proto::PairOpt* release_pairopt();
  ::tzdx::comm_proto::PairOpt* mutable_pairopt();
  void set_allocated_pairopt(::tzdx::comm_proto::PairOpt* pairopt);

  // .tzdx.comm_proto.PairOptRes pairoptres = 6;
  bool has_pairoptres() const;
  void clear_pairoptres();
  static const int kPairoptresFieldNumber = 6;
  private:
  const ::tzdx::comm_proto::PairOptRes& _internal_pairoptres() const;
  public:
  const ::tzdx::comm_proto::PairOptRes& pairoptres() const;
  ::tzdx::comm_proto::PairOptRes* release_pairoptres();
  ::tzdx::comm_proto::PairOptRes* mutable_pairoptres();
  void set_allocated_pairoptres(::tzdx::comm_proto::PairOptRes* pairoptres);

  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.ExplorationMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > flag_;
  mutable int _flag_cached_byte_size_;
  ::tzdx::comm_proto::ChunkData* chunkdata_;
  ::tzdx::comm_proto::ChunkStamps* chunkstamps_;
  ::tzdx::comm_proto::Bspline* bsp_;
  ::tzdx::comm_proto::DroneState* dronestate_;
  ::tzdx::comm_proto::PairOpt* pairopt_;
  ::tzdx::comm_proto::PairOptRes* pairoptres_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BasePacket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tzdx.comm_proto.BasePacket) */ {
 public:
  BasePacket();
  virtual ~BasePacket();

  BasePacket(const BasePacket& from);

  inline BasePacket& operator=(const BasePacket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BasePacket(BasePacket&& from) noexcept
    : BasePacket() {
    *this = ::std::move(from);
  }

  inline BasePacket& operator=(BasePacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BasePacket& default_instance();

  enum BodyCase {
    kPcl = 7,
    kExpmsg = 8,
    BODY_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BasePacket* internal_default_instance() {
    return reinterpret_cast<const BasePacket*>(
               &_BasePacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(BasePacket* other);
  friend void swap(BasePacket& a, BasePacket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BasePacket* New() const final {
    return CreateMaybeMessage<BasePacket>(NULL);
  }

  BasePacket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BasePacket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BasePacket& from);
  void MergeFrom(const BasePacket& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BasePacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sender = 2;
  void clear_sender();
  static const int kSenderFieldNumber = 2;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  #if LANG_CXX11
  void set_sender(::std::string&& value);
  #endif
  void set_sender(const char* value);
  void set_sender(const char* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);

  // string frame = 4;
  void clear_frame();
  static const int kFrameFieldNumber = 4;
  const ::std::string& frame() const;
  void set_frame(const ::std::string& value);
  #if LANG_CXX11
  void set_frame(::std::string&& value);
  #endif
  void set_frame(const char* value);
  void set_frame(const char* value, size_t size);
  ::std::string* mutable_frame();
  ::std::string* release_frame();
  void set_allocated_frame(::std::string* frame);

  // .tzdx.comm_proto.PacketType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::tzdx::comm_proto::PacketType type() const;
  void set_type(::tzdx::comm_proto::PacketType value);

  // int32 seq = 3;
  void clear_seq();
  static const int kSeqFieldNumber = 3;
  ::google::protobuf::int32 seq() const;
  void set_seq(::google::protobuf::int32 value);

  // uint32 second = 5;
  void clear_second();
  static const int kSecondFieldNumber = 5;
  ::google::protobuf::uint32 second() const;
  void set_second(::google::protobuf::uint32 value);

  // uint32 nanosecond = 6;
  void clear_nanosecond();
  static const int kNanosecondFieldNumber = 6;
  ::google::protobuf::uint32 nanosecond() const;
  void set_nanosecond(::google::protobuf::uint32 value);

  // .tzdx.comm_proto.PointCloudXYZIBody pcl = 7;
  bool has_pcl() const;
  void clear_pcl();
  static const int kPclFieldNumber = 7;
  private:
  const ::tzdx::comm_proto::PointCloudXYZIBody& _internal_pcl() const;
  public:
  const ::tzdx::comm_proto::PointCloudXYZIBody& pcl() const;
  ::tzdx::comm_proto::PointCloudXYZIBody* release_pcl();
  ::tzdx::comm_proto::PointCloudXYZIBody* mutable_pcl();
  void set_allocated_pcl(::tzdx::comm_proto::PointCloudXYZIBody* pcl);

  // .tzdx.comm_proto.ExplorationMsg expmsg = 8;
  bool has_expmsg() const;
  void clear_expmsg();
  static const int kExpmsgFieldNumber = 8;
  private:
  const ::tzdx::comm_proto::ExplorationMsg& _internal_expmsg() const;
  public:
  const ::tzdx::comm_proto::ExplorationMsg& expmsg() const;
  ::tzdx::comm_proto::ExplorationMsg* release_expmsg();
  ::tzdx::comm_proto::ExplorationMsg* mutable_expmsg();
  void set_allocated_expmsg(::tzdx::comm_proto::ExplorationMsg* expmsg);

  void clear_body();
  BodyCase body_case() const;
  // @@protoc_insertion_point(class_scope:tzdx.comm_proto.BasePacket)
 private:
  void set_has_pcl();
  void set_has_expmsg();

  inline bool has_body() const;
  inline void clear_has_body();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  ::google::protobuf::internal::ArenaStringPtr frame_;
  int type_;
  ::google::protobuf::int32 seq_;
  ::google::protobuf::uint32 second_;
  ::google::protobuf::uint32 nanosecond_;
  union BodyUnion {
    BodyUnion() {}
    ::tzdx::comm_proto::PointCloudXYZIBody* pcl_;
    ::tzdx::comm_proto::ExplorationMsg* expmsg_;
  } body_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_base_5fdata_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PointXYZI

// float x = 1;
inline void PointXYZI::clear_x() {
  x_ = 0;
}
inline float PointXYZI::x() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PointXYZI.x)
  return x_;
}
inline void PointXYZI::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PointXYZI.x)
}

// float y = 2;
inline void PointXYZI::clear_y() {
  y_ = 0;
}
inline float PointXYZI::y() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PointXYZI.y)
  return y_;
}
inline void PointXYZI::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PointXYZI.y)
}

// float z = 3;
inline void PointXYZI::clear_z() {
  z_ = 0;
}
inline float PointXYZI::z() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PointXYZI.z)
  return z_;
}
inline void PointXYZI::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PointXYZI.z)
}

// float intensity = 4;
inline void PointXYZI::clear_intensity() {
  intensity_ = 0;
}
inline float PointXYZI::intensity() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PointXYZI.intensity)
  return intensity_;
}
inline void PointXYZI::set_intensity(float value) {
  
  intensity_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PointXYZI.intensity)
}

// -------------------------------------------------------------------

// PointCloudXYZIBody

// repeated .tzdx.comm_proto.PointXYZI points = 1;
inline int PointCloudXYZIBody::points_size() const {
  return points_.size();
}
inline void PointCloudXYZIBody::clear_points() {
  points_.Clear();
}
inline ::tzdx::comm_proto::PointXYZI* PointCloudXYZIBody::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.PointCloudXYZIBody.points)
  return points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::PointXYZI >*
PointCloudXYZIBody::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.PointCloudXYZIBody.points)
  return &points_;
}
inline const ::tzdx::comm_proto::PointXYZI& PointCloudXYZIBody::points(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PointCloudXYZIBody.points)
  return points_.Get(index);
}
inline ::tzdx::comm_proto::PointXYZI* PointCloudXYZIBody::add_points() {
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.PointCloudXYZIBody.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::PointXYZI >&
PointCloudXYZIBody::points() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.PointCloudXYZIBody.points)
  return points_;
}

// -------------------------------------------------------------------

// IdxList

// repeated int32 idx = 1;
inline int IdxList::idx_size() const {
  return idx_.size();
}
inline void IdxList::clear_idx() {
  idx_.Clear();
}
inline ::google::protobuf::int32 IdxList::idx(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.IdxList.idx)
  return idx_.Get(index);
}
inline void IdxList::set_idx(int index, ::google::protobuf::int32 value) {
  idx_.Set(index, value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.IdxList.idx)
}
inline void IdxList::add_idx(::google::protobuf::int32 value) {
  idx_.Add(value);
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.IdxList.idx)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IdxList::idx() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.IdxList.idx)
  return idx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IdxList::mutable_idx() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.IdxList.idx)
  return &idx_;
}

// -------------------------------------------------------------------

// PointXYZ

// double x = 1;
inline void PointXYZ::clear_x() {
  x_ = 0;
}
inline double PointXYZ::x() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PointXYZ.x)
  return x_;
}
inline void PointXYZ::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PointXYZ.x)
}

// double y = 2;
inline void PointXYZ::clear_y() {
  y_ = 0;
}
inline double PointXYZ::y() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PointXYZ.y)
  return y_;
}
inline void PointXYZ::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PointXYZ.y)
}

// double z = 3;
inline void PointXYZ::clear_z() {
  z_ = 0;
}
inline double PointXYZ::z() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PointXYZ.z)
  return z_;
}
inline void PointXYZ::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PointXYZ.z)
}

// -------------------------------------------------------------------

// ChunkData

// int32 chunk_drone_id = 1;
inline void ChunkData::clear_chunk_drone_id() {
  chunk_drone_id_ = 0;
}
inline ::google::protobuf::int32 ChunkData::chunk_drone_id() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkData.chunk_drone_id)
  return chunk_drone_id_;
}
inline void ChunkData::set_chunk_drone_id(::google::protobuf::int32 value) {
  
  chunk_drone_id_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkData.chunk_drone_id)
}

// int32 from_drone_id = 2;
inline void ChunkData::clear_from_drone_id() {
  from_drone_id_ = 0;
}
inline ::google::protobuf::int32 ChunkData::from_drone_id() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkData.from_drone_id)
  return from_drone_id_;
}
inline void ChunkData::set_from_drone_id(::google::protobuf::int32 value) {
  
  from_drone_id_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkData.from_drone_id)
}

// int32 idx = 3;
inline void ChunkData::clear_idx() {
  idx_ = 0;
}
inline ::google::protobuf::int32 ChunkData::idx() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkData.idx)
  return idx_;
}
inline void ChunkData::set_idx(::google::protobuf::int32 value) {
  
  idx_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkData.idx)
}

// int32 latest_idx = 4;
inline void ChunkData::clear_latest_idx() {
  latest_idx_ = 0;
}
inline ::google::protobuf::int32 ChunkData::latest_idx() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkData.latest_idx)
  return latest_idx_;
}
inline void ChunkData::set_latest_idx(::google::protobuf::int32 value) {
  
  latest_idx_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkData.latest_idx)
}

// double pos_x = 5;
inline void ChunkData::clear_pos_x() {
  pos_x_ = 0;
}
inline double ChunkData::pos_x() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkData.pos_x)
  return pos_x_;
}
inline void ChunkData::set_pos_x(double value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkData.pos_x)
}

// double pos_y = 6;
inline void ChunkData::clear_pos_y() {
  pos_y_ = 0;
}
inline double ChunkData::pos_y() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkData.pos_y)
  return pos_y_;
}
inline void ChunkData::set_pos_y(double value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkData.pos_y)
}

// double pos_z = 7;
inline void ChunkData::clear_pos_z() {
  pos_z_ = 0;
}
inline double ChunkData::pos_z() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkData.pos_z)
  return pos_z_;
}
inline void ChunkData::set_pos_z(double value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkData.pos_z)
}

// int32 to_drone_id = 8;
inline void ChunkData::clear_to_drone_id() {
  to_drone_id_ = 0;
}
inline ::google::protobuf::int32 ChunkData::to_drone_id() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkData.to_drone_id)
  return to_drone_id_;
}
inline void ChunkData::set_to_drone_id(::google::protobuf::int32 value) {
  
  to_drone_id_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkData.to_drone_id)
}

// repeated int32 voxel_adrs = 9;
inline int ChunkData::voxel_adrs_size() const {
  return voxel_adrs_.size();
}
inline void ChunkData::clear_voxel_adrs() {
  voxel_adrs_.Clear();
}
inline ::google::protobuf::int32 ChunkData::voxel_adrs(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkData.voxel_adrs)
  return voxel_adrs_.Get(index);
}
inline void ChunkData::set_voxel_adrs(int index, ::google::protobuf::int32 value) {
  voxel_adrs_.Set(index, value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkData.voxel_adrs)
}
inline void ChunkData::add_voxel_adrs(::google::protobuf::int32 value) {
  voxel_adrs_.Add(value);
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.ChunkData.voxel_adrs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ChunkData::voxel_adrs() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.ChunkData.voxel_adrs)
  return voxel_adrs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ChunkData::mutable_voxel_adrs() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.ChunkData.voxel_adrs)
  return &voxel_adrs_;
}

// repeated int32 voxel_occ_ = 10;
inline int ChunkData::voxel_occ__size() const {
  return voxel_occ__.size();
}
inline void ChunkData::clear_voxel_occ_() {
  voxel_occ__.Clear();
}
inline ::google::protobuf::int32 ChunkData::voxel_occ_(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkData.voxel_occ_)
  return voxel_occ__.Get(index);
}
inline void ChunkData::set_voxel_occ_(int index, ::google::protobuf::int32 value) {
  voxel_occ__.Set(index, value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkData.voxel_occ_)
}
inline void ChunkData::add_voxel_occ_(::google::protobuf::int32 value) {
  voxel_occ__.Add(value);
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.ChunkData.voxel_occ_)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ChunkData::voxel_occ_() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.ChunkData.voxel_occ_)
  return voxel_occ__;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ChunkData::mutable_voxel_occ_() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.ChunkData.voxel_occ_)
  return &voxel_occ__;
}

// -------------------------------------------------------------------

// ChunkStamps

// int32 from_drone_id = 1;
inline void ChunkStamps::clear_from_drone_id() {
  from_drone_id_ = 0;
}
inline ::google::protobuf::int32 ChunkStamps::from_drone_id() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkStamps.from_drone_id)
  return from_drone_id_;
}
inline void ChunkStamps::set_from_drone_id(::google::protobuf::int32 value) {
  
  from_drone_id_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkStamps.from_drone_id)
}

// repeated .tzdx.comm_proto.IdxList idxlists = 2;
inline int ChunkStamps::idxlists_size() const {
  return idxlists_.size();
}
inline void ChunkStamps::clear_idxlists() {
  idxlists_.Clear();
}
inline ::tzdx::comm_proto::IdxList* ChunkStamps::mutable_idxlists(int index) {
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.ChunkStamps.idxlists)
  return idxlists_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::IdxList >*
ChunkStamps::mutable_idxlists() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.ChunkStamps.idxlists)
  return &idxlists_;
}
inline const ::tzdx::comm_proto::IdxList& ChunkStamps::idxlists(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkStamps.idxlists)
  return idxlists_.Get(index);
}
inline ::tzdx::comm_proto::IdxList* ChunkStamps::add_idxlists() {
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.ChunkStamps.idxlists)
  return idxlists_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::IdxList >&
ChunkStamps::idxlists() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.ChunkStamps.idxlists)
  return idxlists_;
}

// double time = 3;
inline void ChunkStamps::clear_time() {
  time_ = 0;
}
inline double ChunkStamps::time() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ChunkStamps.time)
  return time_;
}
inline void ChunkStamps::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ChunkStamps.time)
}

// -------------------------------------------------------------------

// Bspline

// int32 drone_id = 1;
inline void Bspline::clear_drone_id() {
  drone_id_ = 0;
}
inline ::google::protobuf::int32 Bspline::drone_id() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.Bspline.drone_id)
  return drone_id_;
}
inline void Bspline::set_drone_id(::google::protobuf::int32 value) {
  
  drone_id_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.Bspline.drone_id)
}

// int32 order = 2;
inline void Bspline::clear_order() {
  order_ = 0;
}
inline ::google::protobuf::int32 Bspline::order() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.Bspline.order)
  return order_;
}
inline void Bspline::set_order(::google::protobuf::int32 value) {
  
  order_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.Bspline.order)
}

// int32 traj_id = 3;
inline void Bspline::clear_traj_id() {
  traj_id_ = 0;
}
inline ::google::protobuf::int32 Bspline::traj_id() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.Bspline.traj_id)
  return traj_id_;
}
inline void Bspline::set_traj_id(::google::protobuf::int32 value) {
  
  traj_id_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.Bspline.traj_id)
}

// double yaw_dt = 4;
inline void Bspline::clear_yaw_dt() {
  yaw_dt_ = 0;
}
inline double Bspline::yaw_dt() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.Bspline.yaw_dt)
  return yaw_dt_;
}
inline void Bspline::set_yaw_dt(double value) {
  
  yaw_dt_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.Bspline.yaw_dt)
}

// repeated double knots = 5;
inline int Bspline::knots_size() const {
  return knots_.size();
}
inline void Bspline::clear_knots() {
  knots_.Clear();
}
inline double Bspline::knots(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.Bspline.knots)
  return knots_.Get(index);
}
inline void Bspline::set_knots(int index, double value) {
  knots_.Set(index, value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.Bspline.knots)
}
inline void Bspline::add_knots(double value) {
  knots_.Add(value);
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.Bspline.knots)
}
inline const ::google::protobuf::RepeatedField< double >&
Bspline::knots() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.Bspline.knots)
  return knots_;
}
inline ::google::protobuf::RepeatedField< double >*
Bspline::mutable_knots() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.Bspline.knots)
  return &knots_;
}

// repeated double yaw_pts = 6;
inline int Bspline::yaw_pts_size() const {
  return yaw_pts_.size();
}
inline void Bspline::clear_yaw_pts() {
  yaw_pts_.Clear();
}
inline double Bspline::yaw_pts(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.Bspline.yaw_pts)
  return yaw_pts_.Get(index);
}
inline void Bspline::set_yaw_pts(int index, double value) {
  yaw_pts_.Set(index, value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.Bspline.yaw_pts)
}
inline void Bspline::add_yaw_pts(double value) {
  yaw_pts_.Add(value);
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.Bspline.yaw_pts)
}
inline const ::google::protobuf::RepeatedField< double >&
Bspline::yaw_pts() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.Bspline.yaw_pts)
  return yaw_pts_;
}
inline ::google::protobuf::RepeatedField< double >*
Bspline::mutable_yaw_pts() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.Bspline.yaw_pts)
  return &yaw_pts_;
}

// repeated .tzdx.comm_proto.PointXYZ pos_pts = 7;
inline int Bspline::pos_pts_size() const {
  return pos_pts_.size();
}
inline void Bspline::clear_pos_pts() {
  pos_pts_.Clear();
}
inline ::tzdx::comm_proto::PointXYZ* Bspline::mutable_pos_pts(int index) {
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.Bspline.pos_pts)
  return pos_pts_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::PointXYZ >*
Bspline::mutable_pos_pts() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.Bspline.pos_pts)
  return &pos_pts_;
}
inline const ::tzdx::comm_proto::PointXYZ& Bspline::pos_pts(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.Bspline.pos_pts)
  return pos_pts_.Get(index);
}
inline ::tzdx::comm_proto::PointXYZ* Bspline::add_pos_pts() {
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.Bspline.pos_pts)
  return pos_pts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tzdx::comm_proto::PointXYZ >&
Bspline::pos_pts() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.Bspline.pos_pts)
  return pos_pts_;
}

// int32 secs = 8;
inline void Bspline::clear_secs() {
  secs_ = 0;
}
inline ::google::protobuf::int32 Bspline::secs() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.Bspline.secs)
  return secs_;
}
inline void Bspline::set_secs(::google::protobuf::int32 value) {
  
  secs_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.Bspline.secs)
}

// int32 nsecs = 9;
inline void Bspline::clear_nsecs() {
  nsecs_ = 0;
}
inline ::google::protobuf::int32 Bspline::nsecs() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.Bspline.nsecs)
  return nsecs_;
}
inline void Bspline::set_nsecs(::google::protobuf::int32 value) {
  
  nsecs_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.Bspline.nsecs)
}

// -------------------------------------------------------------------

// DroneState

// int32 drone_id = 1;
inline void DroneState::clear_drone_id() {
  drone_id_ = 0;
}
inline ::google::protobuf::int32 DroneState::drone_id() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.DroneState.drone_id)
  return drone_id_;
}
inline void DroneState::set_drone_id(::google::protobuf::int32 value) {
  
  drone_id_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.DroneState.drone_id)
}

// .tzdx.comm_proto.PointXYZ goal_posit = 2;
inline bool DroneState::has_goal_posit() const {
  return this != internal_default_instance() && goal_posit_ != NULL;
}
inline void DroneState::clear_goal_posit() {
  if (GetArenaNoVirtual() == NULL && goal_posit_ != NULL) {
    delete goal_posit_;
  }
  goal_posit_ = NULL;
}
inline const ::tzdx::comm_proto::PointXYZ& DroneState::_internal_goal_posit() const {
  return *goal_posit_;
}
inline const ::tzdx::comm_proto::PointXYZ& DroneState::goal_posit() const {
  const ::tzdx::comm_proto::PointXYZ* p = goal_posit_;
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.DroneState.goal_posit)
  return p != NULL ? *p : *reinterpret_cast<const ::tzdx::comm_proto::PointXYZ*>(
      &::tzdx::comm_proto::_PointXYZ_default_instance_);
}
inline ::tzdx::comm_proto::PointXYZ* DroneState::release_goal_posit() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.DroneState.goal_posit)
  
  ::tzdx::comm_proto::PointXYZ* temp = goal_posit_;
  goal_posit_ = NULL;
  return temp;
}
inline ::tzdx::comm_proto::PointXYZ* DroneState::mutable_goal_posit() {
  
  if (goal_posit_ == NULL) {
    auto* p = CreateMaybeMessage<::tzdx::comm_proto::PointXYZ>(GetArenaNoVirtual());
    goal_posit_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.DroneState.goal_posit)
  return goal_posit_;
}
inline void DroneState::set_allocated_goal_posit(::tzdx::comm_proto::PointXYZ* goal_posit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete goal_posit_;
  }
  if (goal_posit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      goal_posit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, goal_posit, submessage_arena);
    }
    
  } else {
    
  }
  goal_posit_ = goal_posit;
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.DroneState.goal_posit)
}

// repeated int32 grid_ids = 3;
inline int DroneState::grid_ids_size() const {
  return grid_ids_.size();
}
inline void DroneState::clear_grid_ids() {
  grid_ids_.Clear();
}
inline ::google::protobuf::int32 DroneState::grid_ids(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.DroneState.grid_ids)
  return grid_ids_.Get(index);
}
inline void DroneState::set_grid_ids(int index, ::google::protobuf::int32 value) {
  grid_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.DroneState.grid_ids)
}
inline void DroneState::add_grid_ids(::google::protobuf::int32 value) {
  grid_ids_.Add(value);
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.DroneState.grid_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DroneState::grid_ids() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.DroneState.grid_ids)
  return grid_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DroneState::mutable_grid_ids() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.DroneState.grid_ids)
  return &grid_ids_;
}

// repeated float pos = 4;
inline int DroneState::pos_size() const {
  return pos_.size();
}
inline void DroneState::clear_pos() {
  pos_.Clear();
}
inline float DroneState::pos(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.DroneState.pos)
  return pos_.Get(index);
}
inline void DroneState::set_pos(int index, float value) {
  pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.DroneState.pos)
}
inline void DroneState::add_pos(float value) {
  pos_.Add(value);
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.DroneState.pos)
}
inline const ::google::protobuf::RepeatedField< float >&
DroneState::pos() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.DroneState.pos)
  return pos_;
}
inline ::google::protobuf::RepeatedField< float >*
DroneState::mutable_pos() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.DroneState.pos)
  return &pos_;
}

// double recent_attempt_time = 5;
inline void DroneState::clear_recent_attempt_time() {
  recent_attempt_time_ = 0;
}
inline double DroneState::recent_attempt_time() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.DroneState.recent_attempt_time)
  return recent_attempt_time_;
}
inline void DroneState::set_recent_attempt_time(double value) {
  
  recent_attempt_time_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.DroneState.recent_attempt_time)
}

// int32 role = 6;
inline void DroneState::clear_role() {
  role_ = 0;
}
inline ::google::protobuf::int32 DroneState::role() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.DroneState.role)
  return role_;
}
inline void DroneState::set_role(::google::protobuf::int32 value) {
  
  role_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.DroneState.role)
}

// double stamp = 7;
inline void DroneState::clear_stamp() {
  stamp_ = 0;
}
inline double DroneState::stamp() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.DroneState.stamp)
  return stamp_;
}
inline void DroneState::set_stamp(double value) {
  
  stamp_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.DroneState.stamp)
}

// repeated float vel = 8;
inline int DroneState::vel_size() const {
  return vel_.size();
}
inline void DroneState::clear_vel() {
  vel_.Clear();
}
inline float DroneState::vel(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.DroneState.vel)
  return vel_.Get(index);
}
inline void DroneState::set_vel(int index, float value) {
  vel_.Set(index, value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.DroneState.vel)
}
inline void DroneState::add_vel(float value) {
  vel_.Add(value);
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.DroneState.vel)
}
inline const ::google::protobuf::RepeatedField< float >&
DroneState::vel() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.DroneState.vel)
  return vel_;
}
inline ::google::protobuf::RepeatedField< float >*
DroneState::mutable_vel() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.DroneState.vel)
  return &vel_;
}

// float yaw = 9;
inline void DroneState::clear_yaw() {
  yaw_ = 0;
}
inline float DroneState::yaw() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.DroneState.yaw)
  return yaw_;
}
inline void DroneState::set_yaw(float value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.DroneState.yaw)
}

// -------------------------------------------------------------------

// PairOpt

// .tzdx.comm_proto.PointXYZ ego_posit = 1;
inline bool PairOpt::has_ego_posit() const {
  return this != internal_default_instance() && ego_posit_ != NULL;
}
inline void PairOpt::clear_ego_posit() {
  if (GetArenaNoVirtual() == NULL && ego_posit_ != NULL) {
    delete ego_posit_;
  }
  ego_posit_ = NULL;
}
inline const ::tzdx::comm_proto::PointXYZ& PairOpt::_internal_ego_posit() const {
  return *ego_posit_;
}
inline const ::tzdx::comm_proto::PointXYZ& PairOpt::ego_posit() const {
  const ::tzdx::comm_proto::PointXYZ* p = ego_posit_;
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PairOpt.ego_posit)
  return p != NULL ? *p : *reinterpret_cast<const ::tzdx::comm_proto::PointXYZ*>(
      &::tzdx::comm_proto::_PointXYZ_default_instance_);
}
inline ::tzdx::comm_proto::PointXYZ* PairOpt::release_ego_posit() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.PairOpt.ego_posit)
  
  ::tzdx::comm_proto::PointXYZ* temp = ego_posit_;
  ego_posit_ = NULL;
  return temp;
}
inline ::tzdx::comm_proto::PointXYZ* PairOpt::mutable_ego_posit() {
  
  if (ego_posit_ == NULL) {
    auto* p = CreateMaybeMessage<::tzdx::comm_proto::PointXYZ>(GetArenaNoVirtual());
    ego_posit_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.PairOpt.ego_posit)
  return ego_posit_;
}
inline void PairOpt::set_allocated_ego_posit(::tzdx::comm_proto::PointXYZ* ego_posit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ego_posit_;
  }
  if (ego_posit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ego_posit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ego_posit, submessage_arena);
    }
    
  } else {
    
  }
  ego_posit_ = ego_posit;
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.PairOpt.ego_posit)
}

// int32 from_drone_id = 2;
inline void PairOpt::clear_from_drone_id() {
  from_drone_id_ = 0;
}
inline ::google::protobuf::int32 PairOpt::from_drone_id() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PairOpt.from_drone_id)
  return from_drone_id_;
}
inline void PairOpt::set_from_drone_id(::google::protobuf::int32 value) {
  
  from_drone_id_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PairOpt.from_drone_id)
}

// .tzdx.comm_proto.PointXYZ other_posit = 3;
inline bool PairOpt::has_other_posit() const {
  return this != internal_default_instance() && other_posit_ != NULL;
}
inline void PairOpt::clear_other_posit() {
  if (GetArenaNoVirtual() == NULL && other_posit_ != NULL) {
    delete other_posit_;
  }
  other_posit_ = NULL;
}
inline const ::tzdx::comm_proto::PointXYZ& PairOpt::_internal_other_posit() const {
  return *other_posit_;
}
inline const ::tzdx::comm_proto::PointXYZ& PairOpt::other_posit() const {
  const ::tzdx::comm_proto::PointXYZ* p = other_posit_;
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PairOpt.other_posit)
  return p != NULL ? *p : *reinterpret_cast<const ::tzdx::comm_proto::PointXYZ*>(
      &::tzdx::comm_proto::_PointXYZ_default_instance_);
}
inline ::tzdx::comm_proto::PointXYZ* PairOpt::release_other_posit() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.PairOpt.other_posit)
  
  ::tzdx::comm_proto::PointXYZ* temp = other_posit_;
  other_posit_ = NULL;
  return temp;
}
inline ::tzdx::comm_proto::PointXYZ* PairOpt::mutable_other_posit() {
  
  if (other_posit_ == NULL) {
    auto* p = CreateMaybeMessage<::tzdx::comm_proto::PointXYZ>(GetArenaNoVirtual());
    other_posit_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.PairOpt.other_posit)
  return other_posit_;
}
inline void PairOpt::set_allocated_other_posit(::tzdx::comm_proto::PointXYZ* other_posit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete other_posit_;
  }
  if (other_posit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      other_posit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, other_posit, submessage_arena);
    }
    
  } else {
    
  }
  other_posit_ = other_posit;
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.PairOpt.other_posit)
}

// double stamp = 4;
inline void PairOpt::clear_stamp() {
  stamp_ = 0;
}
inline double PairOpt::stamp() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PairOpt.stamp)
  return stamp_;
}
inline void PairOpt::set_stamp(double value) {
  
  stamp_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PairOpt.stamp)
}

// int32 to_drone_id = 5;
inline void PairOpt::clear_to_drone_id() {
  to_drone_id_ = 0;
}
inline ::google::protobuf::int32 PairOpt::to_drone_id() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PairOpt.to_drone_id)
  return to_drone_id_;
}
inline void PairOpt::set_to_drone_id(::google::protobuf::int32 value) {
  
  to_drone_id_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PairOpt.to_drone_id)
}

// repeated int32 ego_ids = 6;
inline int PairOpt::ego_ids_size() const {
  return ego_ids_.size();
}
inline void PairOpt::clear_ego_ids() {
  ego_ids_.Clear();
}
inline ::google::protobuf::int32 PairOpt::ego_ids(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PairOpt.ego_ids)
  return ego_ids_.Get(index);
}
inline void PairOpt::set_ego_ids(int index, ::google::protobuf::int32 value) {
  ego_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PairOpt.ego_ids)
}
inline void PairOpt::add_ego_ids(::google::protobuf::int32 value) {
  ego_ids_.Add(value);
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.PairOpt.ego_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PairOpt::ego_ids() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.PairOpt.ego_ids)
  return ego_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PairOpt::mutable_ego_ids() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.PairOpt.ego_ids)
  return &ego_ids_;
}

// repeated int32 other_ids = 7;
inline int PairOpt::other_ids_size() const {
  return other_ids_.size();
}
inline void PairOpt::clear_other_ids() {
  other_ids_.Clear();
}
inline ::google::protobuf::int32 PairOpt::other_ids(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PairOpt.other_ids)
  return other_ids_.Get(index);
}
inline void PairOpt::set_other_ids(int index, ::google::protobuf::int32 value) {
  other_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PairOpt.other_ids)
}
inline void PairOpt::add_other_ids(::google::protobuf::int32 value) {
  other_ids_.Add(value);
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.PairOpt.other_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PairOpt::other_ids() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.PairOpt.other_ids)
  return other_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PairOpt::mutable_other_ids() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.PairOpt.other_ids)
  return &other_ids_;
}

// -------------------------------------------------------------------

// PairOptRes

// int32 from_drone_id = 1;
inline void PairOptRes::clear_from_drone_id() {
  from_drone_id_ = 0;
}
inline ::google::protobuf::int32 PairOptRes::from_drone_id() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PairOptRes.from_drone_id)
  return from_drone_id_;
}
inline void PairOptRes::set_from_drone_id(::google::protobuf::int32 value) {
  
  from_drone_id_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PairOptRes.from_drone_id)
}

// double stamp = 2;
inline void PairOptRes::clear_stamp() {
  stamp_ = 0;
}
inline double PairOptRes::stamp() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PairOptRes.stamp)
  return stamp_;
}
inline void PairOptRes::set_stamp(double value) {
  
  stamp_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PairOptRes.stamp)
}

// int32 status = 3;
inline void PairOptRes::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 PairOptRes::status() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PairOptRes.status)
  return status_;
}
inline void PairOptRes::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PairOptRes.status)
}

// int32 to_drone_id = 4;
inline void PairOptRes::clear_to_drone_id() {
  to_drone_id_ = 0;
}
inline ::google::protobuf::int32 PairOptRes::to_drone_id() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.PairOptRes.to_drone_id)
  return to_drone_id_;
}
inline void PairOptRes::set_to_drone_id(::google::protobuf::int32 value) {
  
  to_drone_id_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.PairOptRes.to_drone_id)
}

// -------------------------------------------------------------------

// ExplorationMsg

// .tzdx.comm_proto.ChunkData chunkdata = 1;
inline bool ExplorationMsg::has_chunkdata() const {
  return this != internal_default_instance() && chunkdata_ != NULL;
}
inline void ExplorationMsg::clear_chunkdata() {
  if (GetArenaNoVirtual() == NULL && chunkdata_ != NULL) {
    delete chunkdata_;
  }
  chunkdata_ = NULL;
}
inline const ::tzdx::comm_proto::ChunkData& ExplorationMsg::_internal_chunkdata() const {
  return *chunkdata_;
}
inline const ::tzdx::comm_proto::ChunkData& ExplorationMsg::chunkdata() const {
  const ::tzdx::comm_proto::ChunkData* p = chunkdata_;
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ExplorationMsg.chunkdata)
  return p != NULL ? *p : *reinterpret_cast<const ::tzdx::comm_proto::ChunkData*>(
      &::tzdx::comm_proto::_ChunkData_default_instance_);
}
inline ::tzdx::comm_proto::ChunkData* ExplorationMsg::release_chunkdata() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.ExplorationMsg.chunkdata)
  
  ::tzdx::comm_proto::ChunkData* temp = chunkdata_;
  chunkdata_ = NULL;
  return temp;
}
inline ::tzdx::comm_proto::ChunkData* ExplorationMsg::mutable_chunkdata() {
  
  if (chunkdata_ == NULL) {
    auto* p = CreateMaybeMessage<::tzdx::comm_proto::ChunkData>(GetArenaNoVirtual());
    chunkdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.ExplorationMsg.chunkdata)
  return chunkdata_;
}
inline void ExplorationMsg::set_allocated_chunkdata(::tzdx::comm_proto::ChunkData* chunkdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chunkdata_;
  }
  if (chunkdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chunkdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chunkdata, submessage_arena);
    }
    
  } else {
    
  }
  chunkdata_ = chunkdata;
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.ExplorationMsg.chunkdata)
}

// .tzdx.comm_proto.ChunkStamps chunkstamps = 2;
inline bool ExplorationMsg::has_chunkstamps() const {
  return this != internal_default_instance() && chunkstamps_ != NULL;
}
inline void ExplorationMsg::clear_chunkstamps() {
  if (GetArenaNoVirtual() == NULL && chunkstamps_ != NULL) {
    delete chunkstamps_;
  }
  chunkstamps_ = NULL;
}
inline const ::tzdx::comm_proto::ChunkStamps& ExplorationMsg::_internal_chunkstamps() const {
  return *chunkstamps_;
}
inline const ::tzdx::comm_proto::ChunkStamps& ExplorationMsg::chunkstamps() const {
  const ::tzdx::comm_proto::ChunkStamps* p = chunkstamps_;
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ExplorationMsg.chunkstamps)
  return p != NULL ? *p : *reinterpret_cast<const ::tzdx::comm_proto::ChunkStamps*>(
      &::tzdx::comm_proto::_ChunkStamps_default_instance_);
}
inline ::tzdx::comm_proto::ChunkStamps* ExplorationMsg::release_chunkstamps() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.ExplorationMsg.chunkstamps)
  
  ::tzdx::comm_proto::ChunkStamps* temp = chunkstamps_;
  chunkstamps_ = NULL;
  return temp;
}
inline ::tzdx::comm_proto::ChunkStamps* ExplorationMsg::mutable_chunkstamps() {
  
  if (chunkstamps_ == NULL) {
    auto* p = CreateMaybeMessage<::tzdx::comm_proto::ChunkStamps>(GetArenaNoVirtual());
    chunkstamps_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.ExplorationMsg.chunkstamps)
  return chunkstamps_;
}
inline void ExplorationMsg::set_allocated_chunkstamps(::tzdx::comm_proto::ChunkStamps* chunkstamps) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chunkstamps_;
  }
  if (chunkstamps) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chunkstamps = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chunkstamps, submessage_arena);
    }
    
  } else {
    
  }
  chunkstamps_ = chunkstamps;
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.ExplorationMsg.chunkstamps)
}

// .tzdx.comm_proto.Bspline bsp = 3;
inline bool ExplorationMsg::has_bsp() const {
  return this != internal_default_instance() && bsp_ != NULL;
}
inline void ExplorationMsg::clear_bsp() {
  if (GetArenaNoVirtual() == NULL && bsp_ != NULL) {
    delete bsp_;
  }
  bsp_ = NULL;
}
inline const ::tzdx::comm_proto::Bspline& ExplorationMsg::_internal_bsp() const {
  return *bsp_;
}
inline const ::tzdx::comm_proto::Bspline& ExplorationMsg::bsp() const {
  const ::tzdx::comm_proto::Bspline* p = bsp_;
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ExplorationMsg.bsp)
  return p != NULL ? *p : *reinterpret_cast<const ::tzdx::comm_proto::Bspline*>(
      &::tzdx::comm_proto::_Bspline_default_instance_);
}
inline ::tzdx::comm_proto::Bspline* ExplorationMsg::release_bsp() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.ExplorationMsg.bsp)
  
  ::tzdx::comm_proto::Bspline* temp = bsp_;
  bsp_ = NULL;
  return temp;
}
inline ::tzdx::comm_proto::Bspline* ExplorationMsg::mutable_bsp() {
  
  if (bsp_ == NULL) {
    auto* p = CreateMaybeMessage<::tzdx::comm_proto::Bspline>(GetArenaNoVirtual());
    bsp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.ExplorationMsg.bsp)
  return bsp_;
}
inline void ExplorationMsg::set_allocated_bsp(::tzdx::comm_proto::Bspline* bsp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bsp_;
  }
  if (bsp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bsp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bsp, submessage_arena);
    }
    
  } else {
    
  }
  bsp_ = bsp;
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.ExplorationMsg.bsp)
}

// .tzdx.comm_proto.DroneState dronestate = 4;
inline bool ExplorationMsg::has_dronestate() const {
  return this != internal_default_instance() && dronestate_ != NULL;
}
inline void ExplorationMsg::clear_dronestate() {
  if (GetArenaNoVirtual() == NULL && dronestate_ != NULL) {
    delete dronestate_;
  }
  dronestate_ = NULL;
}
inline const ::tzdx::comm_proto::DroneState& ExplorationMsg::_internal_dronestate() const {
  return *dronestate_;
}
inline const ::tzdx::comm_proto::DroneState& ExplorationMsg::dronestate() const {
  const ::tzdx::comm_proto::DroneState* p = dronestate_;
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ExplorationMsg.dronestate)
  return p != NULL ? *p : *reinterpret_cast<const ::tzdx::comm_proto::DroneState*>(
      &::tzdx::comm_proto::_DroneState_default_instance_);
}
inline ::tzdx::comm_proto::DroneState* ExplorationMsg::release_dronestate() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.ExplorationMsg.dronestate)
  
  ::tzdx::comm_proto::DroneState* temp = dronestate_;
  dronestate_ = NULL;
  return temp;
}
inline ::tzdx::comm_proto::DroneState* ExplorationMsg::mutable_dronestate() {
  
  if (dronestate_ == NULL) {
    auto* p = CreateMaybeMessage<::tzdx::comm_proto::DroneState>(GetArenaNoVirtual());
    dronestate_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.ExplorationMsg.dronestate)
  return dronestate_;
}
inline void ExplorationMsg::set_allocated_dronestate(::tzdx::comm_proto::DroneState* dronestate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dronestate_;
  }
  if (dronestate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dronestate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dronestate, submessage_arena);
    }
    
  } else {
    
  }
  dronestate_ = dronestate;
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.ExplorationMsg.dronestate)
}

// .tzdx.comm_proto.PairOpt pairopt = 5;
inline bool ExplorationMsg::has_pairopt() const {
  return this != internal_default_instance() && pairopt_ != NULL;
}
inline void ExplorationMsg::clear_pairopt() {
  if (GetArenaNoVirtual() == NULL && pairopt_ != NULL) {
    delete pairopt_;
  }
  pairopt_ = NULL;
}
inline const ::tzdx::comm_proto::PairOpt& ExplorationMsg::_internal_pairopt() const {
  return *pairopt_;
}
inline const ::tzdx::comm_proto::PairOpt& ExplorationMsg::pairopt() const {
  const ::tzdx::comm_proto::PairOpt* p = pairopt_;
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ExplorationMsg.pairopt)
  return p != NULL ? *p : *reinterpret_cast<const ::tzdx::comm_proto::PairOpt*>(
      &::tzdx::comm_proto::_PairOpt_default_instance_);
}
inline ::tzdx::comm_proto::PairOpt* ExplorationMsg::release_pairopt() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.ExplorationMsg.pairopt)
  
  ::tzdx::comm_proto::PairOpt* temp = pairopt_;
  pairopt_ = NULL;
  return temp;
}
inline ::tzdx::comm_proto::PairOpt* ExplorationMsg::mutable_pairopt() {
  
  if (pairopt_ == NULL) {
    auto* p = CreateMaybeMessage<::tzdx::comm_proto::PairOpt>(GetArenaNoVirtual());
    pairopt_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.ExplorationMsg.pairopt)
  return pairopt_;
}
inline void ExplorationMsg::set_allocated_pairopt(::tzdx::comm_proto::PairOpt* pairopt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pairopt_;
  }
  if (pairopt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pairopt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pairopt, submessage_arena);
    }
    
  } else {
    
  }
  pairopt_ = pairopt;
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.ExplorationMsg.pairopt)
}

// .tzdx.comm_proto.PairOptRes pairoptres = 6;
inline bool ExplorationMsg::has_pairoptres() const {
  return this != internal_default_instance() && pairoptres_ != NULL;
}
inline void ExplorationMsg::clear_pairoptres() {
  if (GetArenaNoVirtual() == NULL && pairoptres_ != NULL) {
    delete pairoptres_;
  }
  pairoptres_ = NULL;
}
inline const ::tzdx::comm_proto::PairOptRes& ExplorationMsg::_internal_pairoptres() const {
  return *pairoptres_;
}
inline const ::tzdx::comm_proto::PairOptRes& ExplorationMsg::pairoptres() const {
  const ::tzdx::comm_proto::PairOptRes* p = pairoptres_;
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ExplorationMsg.pairoptres)
  return p != NULL ? *p : *reinterpret_cast<const ::tzdx::comm_proto::PairOptRes*>(
      &::tzdx::comm_proto::_PairOptRes_default_instance_);
}
inline ::tzdx::comm_proto::PairOptRes* ExplorationMsg::release_pairoptres() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.ExplorationMsg.pairoptres)
  
  ::tzdx::comm_proto::PairOptRes* temp = pairoptres_;
  pairoptres_ = NULL;
  return temp;
}
inline ::tzdx::comm_proto::PairOptRes* ExplorationMsg::mutable_pairoptres() {
  
  if (pairoptres_ == NULL) {
    auto* p = CreateMaybeMessage<::tzdx::comm_proto::PairOptRes>(GetArenaNoVirtual());
    pairoptres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.ExplorationMsg.pairoptres)
  return pairoptres_;
}
inline void ExplorationMsg::set_allocated_pairoptres(::tzdx::comm_proto::PairOptRes* pairoptres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pairoptres_;
  }
  if (pairoptres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pairoptres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pairoptres, submessage_arena);
    }
    
  } else {
    
  }
  pairoptres_ = pairoptres;
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.ExplorationMsg.pairoptres)
}

// repeated int32 flag = 7;
inline int ExplorationMsg::flag_size() const {
  return flag_.size();
}
inline void ExplorationMsg::clear_flag() {
  flag_.Clear();
}
inline ::google::protobuf::int32 ExplorationMsg::flag(int index) const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.ExplorationMsg.flag)
  return flag_.Get(index);
}
inline void ExplorationMsg::set_flag(int index, ::google::protobuf::int32 value) {
  flag_.Set(index, value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.ExplorationMsg.flag)
}
inline void ExplorationMsg::add_flag(::google::protobuf::int32 value) {
  flag_.Add(value);
  // @@protoc_insertion_point(field_add:tzdx.comm_proto.ExplorationMsg.flag)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ExplorationMsg::flag() const {
  // @@protoc_insertion_point(field_list:tzdx.comm_proto.ExplorationMsg.flag)
  return flag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ExplorationMsg::mutable_flag() {
  // @@protoc_insertion_point(field_mutable_list:tzdx.comm_proto.ExplorationMsg.flag)
  return &flag_;
}

// -------------------------------------------------------------------

// BasePacket

// .tzdx.comm_proto.PacketType type = 1;
inline void BasePacket::clear_type() {
  type_ = 0;
}
inline ::tzdx::comm_proto::PacketType BasePacket::type() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.BasePacket.type)
  return static_cast< ::tzdx::comm_proto::PacketType >(type_);
}
inline void BasePacket::set_type(::tzdx::comm_proto::PacketType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.BasePacket.type)
}

// string sender = 2;
inline void BasePacket::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BasePacket::sender() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.BasePacket.sender)
  return sender_.GetNoArena();
}
inline void BasePacket::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.BasePacket.sender)
}
#if LANG_CXX11
inline void BasePacket::set_sender(::std::string&& value) {
  
  sender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tzdx.comm_proto.BasePacket.sender)
}
#endif
inline void BasePacket::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tzdx.comm_proto.BasePacket.sender)
}
inline void BasePacket::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tzdx.comm_proto.BasePacket.sender)
}
inline ::std::string* BasePacket::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.BasePacket.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasePacket::release_sender() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.BasePacket.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasePacket::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.BasePacket.sender)
}

// int32 seq = 3;
inline void BasePacket::clear_seq() {
  seq_ = 0;
}
inline ::google::protobuf::int32 BasePacket::seq() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.BasePacket.seq)
  return seq_;
}
inline void BasePacket::set_seq(::google::protobuf::int32 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.BasePacket.seq)
}

// string frame = 4;
inline void BasePacket::clear_frame() {
  frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BasePacket::frame() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.BasePacket.frame)
  return frame_.GetNoArena();
}
inline void BasePacket::set_frame(const ::std::string& value) {
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.BasePacket.frame)
}
#if LANG_CXX11
inline void BasePacket::set_frame(::std::string&& value) {
  
  frame_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tzdx.comm_proto.BasePacket.frame)
}
#endif
inline void BasePacket::set_frame(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tzdx.comm_proto.BasePacket.frame)
}
inline void BasePacket::set_frame(const char* value, size_t size) {
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tzdx.comm_proto.BasePacket.frame)
}
inline ::std::string* BasePacket::mutable_frame() {
  
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.BasePacket.frame)
  return frame_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasePacket::release_frame() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.BasePacket.frame)
  
  return frame_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasePacket::set_allocated_frame(::std::string* frame) {
  if (frame != NULL) {
    
  } else {
    
  }
  frame_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame);
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.BasePacket.frame)
}

// uint32 second = 5;
inline void BasePacket::clear_second() {
  second_ = 0u;
}
inline ::google::protobuf::uint32 BasePacket::second() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.BasePacket.second)
  return second_;
}
inline void BasePacket::set_second(::google::protobuf::uint32 value) {
  
  second_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.BasePacket.second)
}

// uint32 nanosecond = 6;
inline void BasePacket::clear_nanosecond() {
  nanosecond_ = 0u;
}
inline ::google::protobuf::uint32 BasePacket::nanosecond() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.BasePacket.nanosecond)
  return nanosecond_;
}
inline void BasePacket::set_nanosecond(::google::protobuf::uint32 value) {
  
  nanosecond_ = value;
  // @@protoc_insertion_point(field_set:tzdx.comm_proto.BasePacket.nanosecond)
}

// .tzdx.comm_proto.PointCloudXYZIBody pcl = 7;
inline bool BasePacket::has_pcl() const {
  return body_case() == kPcl;
}
inline void BasePacket::set_has_pcl() {
  _oneof_case_[0] = kPcl;
}
inline void BasePacket::clear_pcl() {
  if (has_pcl()) {
    delete body_.pcl_;
    clear_has_body();
  }
}
inline const ::tzdx::comm_proto::PointCloudXYZIBody& BasePacket::_internal_pcl() const {
  return *body_.pcl_;
}
inline ::tzdx::comm_proto::PointCloudXYZIBody* BasePacket::release_pcl() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.BasePacket.pcl)
  if (has_pcl()) {
    clear_has_body();
      ::tzdx::comm_proto::PointCloudXYZIBody* temp = body_.pcl_;
    body_.pcl_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tzdx::comm_proto::PointCloudXYZIBody& BasePacket::pcl() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.BasePacket.pcl)
  return has_pcl()
      ? *body_.pcl_
      : *reinterpret_cast< ::tzdx::comm_proto::PointCloudXYZIBody*>(&::tzdx::comm_proto::_PointCloudXYZIBody_default_instance_);
}
inline ::tzdx::comm_proto::PointCloudXYZIBody* BasePacket::mutable_pcl() {
  if (!has_pcl()) {
    clear_body();
    set_has_pcl();
    body_.pcl_ = CreateMaybeMessage< ::tzdx::comm_proto::PointCloudXYZIBody >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.BasePacket.pcl)
  return body_.pcl_;
}

// .tzdx.comm_proto.ExplorationMsg expmsg = 8;
inline bool BasePacket::has_expmsg() const {
  return body_case() == kExpmsg;
}
inline void BasePacket::set_has_expmsg() {
  _oneof_case_[0] = kExpmsg;
}
inline void BasePacket::clear_expmsg() {
  if (has_expmsg()) {
    delete body_.expmsg_;
    clear_has_body();
  }
}
inline const ::tzdx::comm_proto::ExplorationMsg& BasePacket::_internal_expmsg() const {
  return *body_.expmsg_;
}
inline ::tzdx::comm_proto::ExplorationMsg* BasePacket::release_expmsg() {
  // @@protoc_insertion_point(field_release:tzdx.comm_proto.BasePacket.expmsg)
  if (has_expmsg()) {
    clear_has_body();
      ::tzdx::comm_proto::ExplorationMsg* temp = body_.expmsg_;
    body_.expmsg_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::tzdx::comm_proto::ExplorationMsg& BasePacket::expmsg() const {
  // @@protoc_insertion_point(field_get:tzdx.comm_proto.BasePacket.expmsg)
  return has_expmsg()
      ? *body_.expmsg_
      : *reinterpret_cast< ::tzdx::comm_proto::ExplorationMsg*>(&::tzdx::comm_proto::_ExplorationMsg_default_instance_);
}
inline ::tzdx::comm_proto::ExplorationMsg* BasePacket::mutable_expmsg() {
  if (!has_expmsg()) {
    clear_body();
    set_has_expmsg();
    body_.expmsg_ = CreateMaybeMessage< ::tzdx::comm_proto::ExplorationMsg >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tzdx.comm_proto.BasePacket.expmsg)
  return body_.expmsg_;
}

inline bool BasePacket::has_body() const {
  return body_case() != BODY_NOT_SET;
}
inline void BasePacket::clear_has_body() {
  _oneof_case_[0] = BODY_NOT_SET;
}
inline BasePacket::BodyCase BasePacket::body_case() const {
  return BasePacket::BodyCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace comm_proto
}  // namespace tzdx

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tzdx::comm_proto::PacketType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tzdx::comm_proto::PacketType>() {
  return ::tzdx::comm_proto::PacketType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_base_5fdata_2eproto
