// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base_data.proto

#include "base_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_base_5fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChunkData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IdxList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PairOptRes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PointXYZ;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PointXYZI;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Bspline;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ChunkStamps;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DroneState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PairOpt;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PointCloudXYZIBody;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fdata_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_ExplorationMsg;
}  // namespace protobuf_base_5fdata_2eproto
namespace tzdx {
namespace comm_proto {
class PointXYZIDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointXYZI>
      _instance;
} _PointXYZI_default_instance_;
class PointCloudXYZIBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointCloudXYZIBody>
      _instance;
} _PointCloudXYZIBody_default_instance_;
class IdxListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdxList>
      _instance;
} _IdxList_default_instance_;
class PointXYZDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointXYZ>
      _instance;
} _PointXYZ_default_instance_;
class ChunkDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChunkData>
      _instance;
} _ChunkData_default_instance_;
class ChunkStampsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChunkStamps>
      _instance;
} _ChunkStamps_default_instance_;
class BsplineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bspline>
      _instance;
} _Bspline_default_instance_;
class DroneStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DroneState>
      _instance;
} _DroneState_default_instance_;
class PairOptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PairOpt>
      _instance;
} _PairOpt_default_instance_;
class PairOptResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PairOptRes>
      _instance;
} _PairOptRes_default_instance_;
class ExplorationMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExplorationMsg>
      _instance;
} _ExplorationMsg_default_instance_;
class BasePacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BasePacket>
      _instance;
  const ::tzdx::comm_proto::PointCloudXYZIBody* pcl_;
  const ::tzdx::comm_proto::ExplorationMsg* expmsg_;
} _BasePacket_default_instance_;
}  // namespace comm_proto
}  // namespace tzdx
namespace protobuf_base_5fdata_2eproto {
static void InitDefaultsPointXYZI() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_PointXYZI_default_instance_;
    new (ptr) ::tzdx::comm_proto::PointXYZI();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::PointXYZI::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PointXYZI =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPointXYZI}, {}};

static void InitDefaultsPointCloudXYZIBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_PointCloudXYZIBody_default_instance_;
    new (ptr) ::tzdx::comm_proto::PointCloudXYZIBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::PointCloudXYZIBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PointCloudXYZIBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPointCloudXYZIBody}, {
      &protobuf_base_5fdata_2eproto::scc_info_PointXYZI.base,}};

static void InitDefaultsIdxList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_IdxList_default_instance_;
    new (ptr) ::tzdx::comm_proto::IdxList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::IdxList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IdxList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdxList}, {}};

static void InitDefaultsPointXYZ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_PointXYZ_default_instance_;
    new (ptr) ::tzdx::comm_proto::PointXYZ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::PointXYZ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PointXYZ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPointXYZ}, {}};

static void InitDefaultsChunkData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_ChunkData_default_instance_;
    new (ptr) ::tzdx::comm_proto::ChunkData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::ChunkData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChunkData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChunkData}, {}};

static void InitDefaultsChunkStamps() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_ChunkStamps_default_instance_;
    new (ptr) ::tzdx::comm_proto::ChunkStamps();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::ChunkStamps::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChunkStamps =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChunkStamps}, {
      &protobuf_base_5fdata_2eproto::scc_info_IdxList.base,}};

static void InitDefaultsBspline() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_Bspline_default_instance_;
    new (ptr) ::tzdx::comm_proto::Bspline();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::Bspline::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Bspline =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBspline}, {
      &protobuf_base_5fdata_2eproto::scc_info_PointXYZ.base,}};

static void InitDefaultsDroneState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_DroneState_default_instance_;
    new (ptr) ::tzdx::comm_proto::DroneState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::DroneState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DroneState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDroneState}, {
      &protobuf_base_5fdata_2eproto::scc_info_PointXYZ.base,}};

static void InitDefaultsPairOpt() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_PairOpt_default_instance_;
    new (ptr) ::tzdx::comm_proto::PairOpt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::PairOpt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PairOpt =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPairOpt}, {
      &protobuf_base_5fdata_2eproto::scc_info_PointXYZ.base,}};

static void InitDefaultsPairOptRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_PairOptRes_default_instance_;
    new (ptr) ::tzdx::comm_proto::PairOptRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::PairOptRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PairOptRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPairOptRes}, {}};

static void InitDefaultsExplorationMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_ExplorationMsg_default_instance_;
    new (ptr) ::tzdx::comm_proto::ExplorationMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::ExplorationMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_ExplorationMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsExplorationMsg}, {
      &protobuf_base_5fdata_2eproto::scc_info_ChunkData.base,
      &protobuf_base_5fdata_2eproto::scc_info_ChunkStamps.base,
      &protobuf_base_5fdata_2eproto::scc_info_Bspline.base,
      &protobuf_base_5fdata_2eproto::scc_info_DroneState.base,
      &protobuf_base_5fdata_2eproto::scc_info_PairOpt.base,
      &protobuf_base_5fdata_2eproto::scc_info_PairOptRes.base,}};

static void InitDefaultsBasePacket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tzdx::comm_proto::_BasePacket_default_instance_;
    new (ptr) ::tzdx::comm_proto::BasePacket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tzdx::comm_proto::BasePacket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BasePacket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBasePacket}, {
      &protobuf_base_5fdata_2eproto::scc_info_PointCloudXYZIBody.base,
      &protobuf_base_5fdata_2eproto::scc_info_ExplorationMsg.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PointXYZI.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PointCloudXYZIBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IdxList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PointXYZ.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChunkData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChunkStamps.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Bspline.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DroneState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PairOpt.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PairOptRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExplorationMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BasePacket.base);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PointXYZI, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PointXYZI, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PointXYZI, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PointXYZI, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PointXYZI, intensity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PointCloudXYZIBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PointCloudXYZIBody, points_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::IdxList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::IdxList, idx_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PointXYZ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PointXYZ, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PointXYZ, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PointXYZ, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkData, chunk_drone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkData, from_drone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkData, idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkData, latest_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkData, pos_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkData, pos_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkData, pos_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkData, to_drone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkData, voxel_adrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkData, voxel_occ__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkStamps, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkStamps, from_drone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkStamps, idxlists_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ChunkStamps, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::Bspline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::Bspline, drone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::Bspline, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::Bspline, traj_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::Bspline, yaw_dt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::Bspline, knots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::Bspline, yaw_pts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::Bspline, pos_pts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::Bspline, secs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::Bspline, nsecs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::DroneState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::DroneState, drone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::DroneState, goal_posit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::DroneState, grid_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::DroneState, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::DroneState, recent_attempt_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::DroneState, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::DroneState, stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::DroneState, vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::DroneState, yaw_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOpt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOpt, ego_posit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOpt, from_drone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOpt, other_posit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOpt, stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOpt, to_drone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOpt, ego_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOpt, other_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOptRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOptRes, from_drone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOptRes, stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOptRes, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::PairOptRes, to_drone_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ExplorationMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ExplorationMsg, chunkdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ExplorationMsg, chunkstamps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ExplorationMsg, bsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ExplorationMsg, dronestate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ExplorationMsg, pairopt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ExplorationMsg, pairoptres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::ExplorationMsg, flag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::BasePacket, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::BasePacket, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::BasePacket, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::BasePacket, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::BasePacket, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::BasePacket, frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::BasePacket, second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::BasePacket, nanosecond_),
  offsetof(::tzdx::comm_proto::BasePacketDefaultTypeInternal, pcl_),
  offsetof(::tzdx::comm_proto::BasePacketDefaultTypeInternal, expmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tzdx::comm_proto::BasePacket, body_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tzdx::comm_proto::PointXYZI)},
  { 9, -1, sizeof(::tzdx::comm_proto::PointCloudXYZIBody)},
  { 15, -1, sizeof(::tzdx::comm_proto::IdxList)},
  { 21, -1, sizeof(::tzdx::comm_proto::PointXYZ)},
  { 29, -1, sizeof(::tzdx::comm_proto::ChunkData)},
  { 44, -1, sizeof(::tzdx::comm_proto::ChunkStamps)},
  { 52, -1, sizeof(::tzdx::comm_proto::Bspline)},
  { 66, -1, sizeof(::tzdx::comm_proto::DroneState)},
  { 80, -1, sizeof(::tzdx::comm_proto::PairOpt)},
  { 92, -1, sizeof(::tzdx::comm_proto::PairOptRes)},
  { 101, -1, sizeof(::tzdx::comm_proto::ExplorationMsg)},
  { 113, -1, sizeof(::tzdx::comm_proto::BasePacket)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_PointXYZI_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_PointCloudXYZIBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_IdxList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_PointXYZ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_ChunkData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_ChunkStamps_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_Bspline_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_DroneState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_PairOpt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_PairOptRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_ExplorationMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tzdx::comm_proto::_BasePacket_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "base_data.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017base_data.proto\022\017tzdx.comm_proto\"\?\n\tPo"
      "intXYZI\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002"
      "\022\021\n\tintensity\030\004 \001(\002\"@\n\022PointCloudXYZIBod"
      "y\022*\n\006points\030\001 \003(\0132\032.tzdx.comm_proto.Poin"
      "tXYZI\"\026\n\007IdxList\022\013\n\003idx\030\001 \003(\005\"+\n\010PointXY"
      "Z\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\"\305\001\n\tC"
      "hunkData\022\026\n\016chunk_drone_id\030\001 \001(\005\022\025\n\rfrom"
      "_drone_id\030\002 \001(\005\022\013\n\003idx\030\003 \001(\005\022\022\n\nlatest_i"
      "dx\030\004 \001(\005\022\r\n\005pos_x\030\005 \001(\001\022\r\n\005pos_y\030\006 \001(\001\022\r"
      "\n\005pos_z\030\007 \001(\001\022\023\n\013to_drone_id\030\010 \001(\005\022\022\n\nvo"
      "xel_adrs\030\t \003(\005\022\022\n\nvoxel_occ_\030\n \003(\005\"^\n\013Ch"
      "unkStamps\022\025\n\rfrom_drone_id\030\001 \001(\005\022*\n\010idxl"
      "ists\030\002 \003(\0132\030.tzdx.comm_proto.IdxList\022\014\n\004"
      "time\030\003 \001(\001\"\264\001\n\007Bspline\022\020\n\010drone_id\030\001 \001(\005"
      "\022\r\n\005order\030\002 \001(\005\022\017\n\007traj_id\030\003 \001(\005\022\016\n\006yaw_"
      "dt\030\004 \001(\001\022\r\n\005knots\030\005 \003(\001\022\017\n\007yaw_pts\030\006 \003(\001"
      "\022*\n\007pos_pts\030\007 \003(\0132\031.tzdx.comm_proto.Poin"
      "tXYZ\022\014\n\004secs\030\010 \001(\005\022\r\n\005nsecs\030\t \001(\005\"\300\001\n\nDr"
      "oneState\022\020\n\010drone_id\030\001 \001(\005\022-\n\ngoal_posit"
      "\030\002 \001(\0132\031.tzdx.comm_proto.PointXYZ\022\020\n\010gri"
      "d_ids\030\003 \003(\005\022\013\n\003pos\030\004 \003(\002\022\033\n\023recent_attem"
      "pt_time\030\005 \001(\001\022\014\n\004role\030\006 \001(\005\022\r\n\005stamp\030\007 \001"
      "(\001\022\013\n\003vel\030\010 \003(\002\022\013\n\003yaw\030\t \001(\002\"\306\001\n\007PairOpt"
      "\022,\n\tego_posit\030\001 \001(\0132\031.tzdx.comm_proto.Po"
      "intXYZ\022\025\n\rfrom_drone_id\030\002 \001(\005\022.\n\013other_p"
      "osit\030\003 \001(\0132\031.tzdx.comm_proto.PointXYZ\022\r\n"
      "\005stamp\030\004 \001(\001\022\023\n\013to_drone_id\030\005 \001(\005\022\017\n\007ego"
      "_ids\030\006 \003(\005\022\021\n\tother_ids\030\007 \003(\005\"W\n\nPairOpt"
      "Res\022\025\n\rfrom_drone_id\030\001 \001(\005\022\r\n\005stamp\030\002 \001("
      "\001\022\016\n\006status\030\003 \001(\005\022\023\n\013to_drone_id\030\004 \001(\005\"\264"
      "\002\n\016ExplorationMsg\022-\n\tchunkdata\030\001 \001(\0132\032.t"
      "zdx.comm_proto.ChunkData\0221\n\013chunkstamps\030"
      "\002 \001(\0132\034.tzdx.comm_proto.ChunkStamps\022%\n\003b"
      "sp\030\003 \001(\0132\030.tzdx.comm_proto.Bspline\022/\n\ndr"
      "onestate\030\004 \001(\0132\033.tzdx.comm_proto.DroneSt"
      "ate\022)\n\007pairopt\030\005 \001(\0132\030.tzdx.comm_proto.P"
      "airOpt\022/\n\npairoptres\030\006 \001(\0132\033.tzdx.comm_p"
      "roto.PairOptRes\022\014\n\004flag\030\007 \003(\005\"\366\001\n\nBasePa"
      "cket\022)\n\004type\030\001 \001(\0162\033.tzdx.comm_proto.Pac"
      "ketType\022\016\n\006sender\030\002 \001(\t\022\013\n\003seq\030\003 \001(\005\022\r\n\005"
      "frame\030\004 \001(\t\022\016\n\006second\030\005 \001(\r\022\022\n\nnanosecon"
      "d\030\006 \001(\r\0222\n\003pcl\030\007 \001(\0132#.tzdx.comm_proto.P"
      "ointCloudXYZIBodyH\000\0221\n\006expmsg\030\010 \001(\0132\037.tz"
      "dx.comm_proto.ExplorationMsgH\000B\006\n\004body*R"
      "\n\nPacketType\022\017\n\013PACKET_NONE\020\000\022\023\n\017PACKET_"
      "HEARBEAT\020\001\022\016\n\nPACKET_MAP\020\002\022\016\n\nPACKET_NAV"
      "\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1850);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "base_data.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_base_5fdata_2eproto
namespace tzdx {
namespace comm_proto {
const ::google::protobuf::EnumDescriptor* PacketType_descriptor() {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_base_5fdata_2eproto::file_level_enum_descriptors[0];
}
bool PacketType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PointXYZI::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointXYZI::kXFieldNumber;
const int PointXYZI::kYFieldNumber;
const int PointXYZI::kZFieldNumber;
const int PointXYZI::kIntensityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointXYZI::PointXYZI()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_PointXYZI.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.PointXYZI)
}
PointXYZI::PointXYZI(const PointXYZI& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&intensity_) -
    reinterpret_cast<char*>(&x_)) + sizeof(intensity_));
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.PointXYZI)
}

void PointXYZI::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intensity_) -
      reinterpret_cast<char*>(&x_)) + sizeof(intensity_));
}

PointXYZI::~PointXYZI() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.PointXYZI)
  SharedDtor();
}

void PointXYZI::SharedDtor() {
}

void PointXYZI::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PointXYZI::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointXYZI& PointXYZI::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_PointXYZI.base);
  return *internal_default_instance();
}


void PointXYZI::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.PointXYZI)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intensity_) -
      reinterpret_cast<char*>(&x_)) + sizeof(intensity_));
  _internal_metadata_.Clear();
}

bool PointXYZI::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.PointXYZI)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float intensity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &intensity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.PointXYZI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.PointXYZI)
  return false;
#undef DO_
}

void PointXYZI::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.PointXYZI)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // float intensity = 4;
  if (this->intensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->intensity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.PointXYZI)
}

::google::protobuf::uint8* PointXYZI::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.PointXYZI)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // float intensity = 4;
  if (this->intensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->intensity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.PointXYZI)
  return target;
}

size_t PointXYZI::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.PointXYZI)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float intensity = 4;
  if (this->intensity() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointXYZI::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.PointXYZI)
  GOOGLE_DCHECK_NE(&from, this);
  const PointXYZI* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointXYZI>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.PointXYZI)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.PointXYZI)
    MergeFrom(*source);
  }
}

void PointXYZI::MergeFrom(const PointXYZI& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.PointXYZI)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.intensity() != 0) {
    set_intensity(from.intensity());
  }
}

void PointXYZI::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.PointXYZI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointXYZI::CopyFrom(const PointXYZI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.PointXYZI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointXYZI::IsInitialized() const {
  return true;
}

void PointXYZI::Swap(PointXYZI* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointXYZI::InternalSwap(PointXYZI* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(intensity_, other->intensity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PointXYZI::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointCloudXYZIBody::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointCloudXYZIBody::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointCloudXYZIBody::PointCloudXYZIBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_PointCloudXYZIBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.PointCloudXYZIBody)
}
PointCloudXYZIBody::PointCloudXYZIBody(const PointCloudXYZIBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.PointCloudXYZIBody)
}

void PointCloudXYZIBody::SharedCtor() {
}

PointCloudXYZIBody::~PointCloudXYZIBody() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.PointCloudXYZIBody)
  SharedDtor();
}

void PointCloudXYZIBody::SharedDtor() {
}

void PointCloudXYZIBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PointCloudXYZIBody::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointCloudXYZIBody& PointCloudXYZIBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_PointCloudXYZIBody.base);
  return *internal_default_instance();
}


void PointCloudXYZIBody::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.PointCloudXYZIBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  _internal_metadata_.Clear();
}

bool PointCloudXYZIBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.PointCloudXYZIBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tzdx.comm_proto.PointXYZI points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.PointCloudXYZIBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.PointCloudXYZIBody)
  return false;
#undef DO_
}

void PointCloudXYZIBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.PointCloudXYZIBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tzdx.comm_proto.PointXYZI points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->points(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.PointCloudXYZIBody)
}

::google::protobuf::uint8* PointCloudXYZIBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.PointCloudXYZIBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tzdx.comm_proto.PointXYZI points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.PointCloudXYZIBody)
  return target;
}

size_t PointCloudXYZIBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.PointCloudXYZIBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tzdx.comm_proto.PointXYZI points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointCloudXYZIBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.PointCloudXYZIBody)
  GOOGLE_DCHECK_NE(&from, this);
  const PointCloudXYZIBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointCloudXYZIBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.PointCloudXYZIBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.PointCloudXYZIBody)
    MergeFrom(*source);
  }
}

void PointCloudXYZIBody::MergeFrom(const PointCloudXYZIBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.PointCloudXYZIBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
}

void PointCloudXYZIBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.PointCloudXYZIBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointCloudXYZIBody::CopyFrom(const PointCloudXYZIBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.PointCloudXYZIBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointCloudXYZIBody::IsInitialized() const {
  return true;
}

void PointCloudXYZIBody::Swap(PointCloudXYZIBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointCloudXYZIBody::InternalSwap(PointCloudXYZIBody* other) {
  using std::swap;
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PointCloudXYZIBody::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IdxList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdxList::kIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdxList::IdxList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_IdxList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.IdxList)
}
IdxList::IdxList(const IdxList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      idx_(from.idx_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.IdxList)
}

void IdxList::SharedCtor() {
}

IdxList::~IdxList() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.IdxList)
  SharedDtor();
}

void IdxList::SharedDtor() {
}

void IdxList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IdxList::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdxList& IdxList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_IdxList.base);
  return *internal_default_instance();
}


void IdxList::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.IdxList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  idx_.Clear();
  _internal_metadata_.Clear();
}

bool IdxList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.IdxList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_idx())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_idx())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.IdxList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.IdxList)
  return false;
#undef DO_
}

void IdxList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.IdxList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 idx = 1;
  if (this->idx_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _idx_cached_byte_size_));
  }
  for (int i = 0, n = this->idx_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->idx(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.IdxList)
}

::google::protobuf::uint8* IdxList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.IdxList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 idx = 1;
  if (this->idx_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _idx_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->idx_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.IdxList)
  return target;
}

size_t IdxList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.IdxList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 idx = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->idx_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _idx_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdxList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.IdxList)
  GOOGLE_DCHECK_NE(&from, this);
  const IdxList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdxList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.IdxList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.IdxList)
    MergeFrom(*source);
  }
}

void IdxList::MergeFrom(const IdxList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.IdxList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  idx_.MergeFrom(from.idx_);
}

void IdxList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.IdxList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdxList::CopyFrom(const IdxList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.IdxList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdxList::IsInitialized() const {
  return true;
}

void IdxList::Swap(IdxList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdxList::InternalSwap(IdxList* other) {
  using std::swap;
  idx_.InternalSwap(&other->idx_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IdxList::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointXYZ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointXYZ::kXFieldNumber;
const int PointXYZ::kYFieldNumber;
const int PointXYZ::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointXYZ::PointXYZ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_PointXYZ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.PointXYZ)
}
PointXYZ::PointXYZ(const PointXYZ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.PointXYZ)
}

void PointXYZ::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

PointXYZ::~PointXYZ() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.PointXYZ)
  SharedDtor();
}

void PointXYZ::SharedDtor() {
}

void PointXYZ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PointXYZ::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointXYZ& PointXYZ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_PointXYZ.base);
  return *internal_default_instance();
}


void PointXYZ::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.PointXYZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool PointXYZ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.PointXYZ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.PointXYZ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.PointXYZ)
  return false;
#undef DO_
}

void PointXYZ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.PointXYZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.PointXYZ)
}

::google::protobuf::uint8* PointXYZ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.PointXYZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.PointXYZ)
  return target;
}

size_t PointXYZ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.PointXYZ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointXYZ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.PointXYZ)
  GOOGLE_DCHECK_NE(&from, this);
  const PointXYZ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointXYZ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.PointXYZ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.PointXYZ)
    MergeFrom(*source);
  }
}

void PointXYZ::MergeFrom(const PointXYZ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.PointXYZ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void PointXYZ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.PointXYZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointXYZ::CopyFrom(const PointXYZ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.PointXYZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointXYZ::IsInitialized() const {
  return true;
}

void PointXYZ::Swap(PointXYZ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointXYZ::InternalSwap(PointXYZ* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PointXYZ::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChunkData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChunkData::kChunkDroneIdFieldNumber;
const int ChunkData::kFromDroneIdFieldNumber;
const int ChunkData::kIdxFieldNumber;
const int ChunkData::kLatestIdxFieldNumber;
const int ChunkData::kPosXFieldNumber;
const int ChunkData::kPosYFieldNumber;
const int ChunkData::kPosZFieldNumber;
const int ChunkData::kToDroneIdFieldNumber;
const int ChunkData::kVoxelAdrsFieldNumber;
const int ChunkData::kVoxelOccFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChunkData::ChunkData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_ChunkData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.ChunkData)
}
ChunkData::ChunkData(const ChunkData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      voxel_adrs_(from.voxel_adrs_),
      voxel_occ__(from.voxel_occ__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&chunk_drone_id_, &from.chunk_drone_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&to_drone_id_) -
    reinterpret_cast<char*>(&chunk_drone_id_)) + sizeof(to_drone_id_));
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.ChunkData)
}

void ChunkData::SharedCtor() {
  ::memset(&chunk_drone_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_drone_id_) -
      reinterpret_cast<char*>(&chunk_drone_id_)) + sizeof(to_drone_id_));
}

ChunkData::~ChunkData() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.ChunkData)
  SharedDtor();
}

void ChunkData::SharedDtor() {
}

void ChunkData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChunkData::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChunkData& ChunkData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_ChunkData.base);
  return *internal_default_instance();
}


void ChunkData::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.ChunkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  voxel_adrs_.Clear();
  voxel_occ__.Clear();
  ::memset(&chunk_drone_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_drone_id_) -
      reinterpret_cast<char*>(&chunk_drone_id_)) + sizeof(to_drone_id_));
  _internal_metadata_.Clear();
}

bool ChunkData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.ChunkData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 chunk_drone_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chunk_drone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 from_drone_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_drone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 idx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 latest_idx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &latest_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pos_x = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pos_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pos_y = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pos_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pos_z = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pos_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 to_drone_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &to_drone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 voxel_adrs = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_voxel_adrs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_voxel_adrs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 voxel_occ_ = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_voxel_occ_())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_voxel_occ_())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.ChunkData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.ChunkData)
  return false;
#undef DO_
}

void ChunkData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.ChunkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chunk_drone_id = 1;
  if (this->chunk_drone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chunk_drone_id(), output);
  }

  // int32 from_drone_id = 2;
  if (this->from_drone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->from_drone_id(), output);
  }

  // int32 idx = 3;
  if (this->idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->idx(), output);
  }

  // int32 latest_idx = 4;
  if (this->latest_idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->latest_idx(), output);
  }

  // double pos_x = 5;
  if (this->pos_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->pos_x(), output);
  }

  // double pos_y = 6;
  if (this->pos_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->pos_y(), output);
  }

  // double pos_z = 7;
  if (this->pos_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->pos_z(), output);
  }

  // int32 to_drone_id = 8;
  if (this->to_drone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->to_drone_id(), output);
  }

  // repeated int32 voxel_adrs = 9;
  if (this->voxel_adrs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _voxel_adrs_cached_byte_size_));
  }
  for (int i = 0, n = this->voxel_adrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->voxel_adrs(i), output);
  }

  // repeated int32 voxel_occ_ = 10;
  if (this->voxel_occ__size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _voxel_occ__cached_byte_size_));
  }
  for (int i = 0, n = this->voxel_occ__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->voxel_occ_(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.ChunkData)
}

::google::protobuf::uint8* ChunkData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.ChunkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chunk_drone_id = 1;
  if (this->chunk_drone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chunk_drone_id(), target);
  }

  // int32 from_drone_id = 2;
  if (this->from_drone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->from_drone_id(), target);
  }

  // int32 idx = 3;
  if (this->idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->idx(), target);
  }

  // int32 latest_idx = 4;
  if (this->latest_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->latest_idx(), target);
  }

  // double pos_x = 5;
  if (this->pos_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->pos_x(), target);
  }

  // double pos_y = 6;
  if (this->pos_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->pos_y(), target);
  }

  // double pos_z = 7;
  if (this->pos_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->pos_z(), target);
  }

  // int32 to_drone_id = 8;
  if (this->to_drone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->to_drone_id(), target);
  }

  // repeated int32 voxel_adrs = 9;
  if (this->voxel_adrs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _voxel_adrs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->voxel_adrs_, target);
  }

  // repeated int32 voxel_occ_ = 10;
  if (this->voxel_occ__size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _voxel_occ__cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->voxel_occ__, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.ChunkData)
  return target;
}

size_t ChunkData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.ChunkData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 voxel_adrs = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->voxel_adrs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _voxel_adrs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 voxel_occ_ = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->voxel_occ__);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _voxel_occ__cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 chunk_drone_id = 1;
  if (this->chunk_drone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chunk_drone_id());
  }

  // int32 from_drone_id = 2;
  if (this->from_drone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_drone_id());
  }

  // int32 idx = 3;
  if (this->idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idx());
  }

  // int32 latest_idx = 4;
  if (this->latest_idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->latest_idx());
  }

  // double pos_x = 5;
  if (this->pos_x() != 0) {
    total_size += 1 + 8;
  }

  // double pos_y = 6;
  if (this->pos_y() != 0) {
    total_size += 1 + 8;
  }

  // double pos_z = 7;
  if (this->pos_z() != 0) {
    total_size += 1 + 8;
  }

  // int32 to_drone_id = 8;
  if (this->to_drone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->to_drone_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChunkData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.ChunkData)
  GOOGLE_DCHECK_NE(&from, this);
  const ChunkData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChunkData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.ChunkData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.ChunkData)
    MergeFrom(*source);
  }
}

void ChunkData::MergeFrom(const ChunkData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.ChunkData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  voxel_adrs_.MergeFrom(from.voxel_adrs_);
  voxel_occ__.MergeFrom(from.voxel_occ__);
  if (from.chunk_drone_id() != 0) {
    set_chunk_drone_id(from.chunk_drone_id());
  }
  if (from.from_drone_id() != 0) {
    set_from_drone_id(from.from_drone_id());
  }
  if (from.idx() != 0) {
    set_idx(from.idx());
  }
  if (from.latest_idx() != 0) {
    set_latest_idx(from.latest_idx());
  }
  if (from.pos_x() != 0) {
    set_pos_x(from.pos_x());
  }
  if (from.pos_y() != 0) {
    set_pos_y(from.pos_y());
  }
  if (from.pos_z() != 0) {
    set_pos_z(from.pos_z());
  }
  if (from.to_drone_id() != 0) {
    set_to_drone_id(from.to_drone_id());
  }
}

void ChunkData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.ChunkData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChunkData::CopyFrom(const ChunkData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.ChunkData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChunkData::IsInitialized() const {
  return true;
}

void ChunkData::Swap(ChunkData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChunkData::InternalSwap(ChunkData* other) {
  using std::swap;
  voxel_adrs_.InternalSwap(&other->voxel_adrs_);
  voxel_occ__.InternalSwap(&other->voxel_occ__);
  swap(chunk_drone_id_, other->chunk_drone_id_);
  swap(from_drone_id_, other->from_drone_id_);
  swap(idx_, other->idx_);
  swap(latest_idx_, other->latest_idx_);
  swap(pos_x_, other->pos_x_);
  swap(pos_y_, other->pos_y_);
  swap(pos_z_, other->pos_z_);
  swap(to_drone_id_, other->to_drone_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChunkData::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChunkStamps::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChunkStamps::kFromDroneIdFieldNumber;
const int ChunkStamps::kIdxlistsFieldNumber;
const int ChunkStamps::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChunkStamps::ChunkStamps()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_ChunkStamps.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.ChunkStamps)
}
ChunkStamps::ChunkStamps(const ChunkStamps& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      idxlists_(from.idxlists_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_drone_id_) -
    reinterpret_cast<char*>(&time_)) + sizeof(from_drone_id_));
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.ChunkStamps)
}

void ChunkStamps::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_drone_id_) -
      reinterpret_cast<char*>(&time_)) + sizeof(from_drone_id_));
}

ChunkStamps::~ChunkStamps() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.ChunkStamps)
  SharedDtor();
}

void ChunkStamps::SharedDtor() {
}

void ChunkStamps::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChunkStamps::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChunkStamps& ChunkStamps::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_ChunkStamps.base);
  return *internal_default_instance();
}


void ChunkStamps::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.ChunkStamps)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  idxlists_.Clear();
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_drone_id_) -
      reinterpret_cast<char*>(&time_)) + sizeof(from_drone_id_));
  _internal_metadata_.Clear();
}

bool ChunkStamps::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.ChunkStamps)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 from_drone_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_drone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tzdx.comm_proto.IdxList idxlists = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_idxlists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.ChunkStamps)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.ChunkStamps)
  return false;
#undef DO_
}

void ChunkStamps::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.ChunkStamps)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 from_drone_id = 1;
  if (this->from_drone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->from_drone_id(), output);
  }

  // repeated .tzdx.comm_proto.IdxList idxlists = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->idxlists_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->idxlists(static_cast<int>(i)),
      output);
  }

  // double time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.ChunkStamps)
}

::google::protobuf::uint8* ChunkStamps::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.ChunkStamps)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 from_drone_id = 1;
  if (this->from_drone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->from_drone_id(), target);
  }

  // repeated .tzdx.comm_proto.IdxList idxlists = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->idxlists_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->idxlists(static_cast<int>(i)), deterministic, target);
  }

  // double time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.ChunkStamps)
  return target;
}

size_t ChunkStamps::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.ChunkStamps)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tzdx.comm_proto.IdxList idxlists = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->idxlists_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->idxlists(static_cast<int>(i)));
    }
  }

  // double time = 3;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  // int32 from_drone_id = 1;
  if (this->from_drone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_drone_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChunkStamps::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.ChunkStamps)
  GOOGLE_DCHECK_NE(&from, this);
  const ChunkStamps* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChunkStamps>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.ChunkStamps)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.ChunkStamps)
    MergeFrom(*source);
  }
}

void ChunkStamps::MergeFrom(const ChunkStamps& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.ChunkStamps)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  idxlists_.MergeFrom(from.idxlists_);
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.from_drone_id() != 0) {
    set_from_drone_id(from.from_drone_id());
  }
}

void ChunkStamps::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.ChunkStamps)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChunkStamps::CopyFrom(const ChunkStamps& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.ChunkStamps)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChunkStamps::IsInitialized() const {
  return true;
}

void ChunkStamps::Swap(ChunkStamps* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChunkStamps::InternalSwap(ChunkStamps* other) {
  using std::swap;
  CastToBase(&idxlists_)->InternalSwap(CastToBase(&other->idxlists_));
  swap(time_, other->time_);
  swap(from_drone_id_, other->from_drone_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChunkStamps::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Bspline::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bspline::kDroneIdFieldNumber;
const int Bspline::kOrderFieldNumber;
const int Bspline::kTrajIdFieldNumber;
const int Bspline::kYawDtFieldNumber;
const int Bspline::kKnotsFieldNumber;
const int Bspline::kYawPtsFieldNumber;
const int Bspline::kPosPtsFieldNumber;
const int Bspline::kSecsFieldNumber;
const int Bspline::kNsecsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bspline::Bspline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_Bspline.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.Bspline)
}
Bspline::Bspline(const Bspline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      knots_(from.knots_),
      yaw_pts_(from.yaw_pts_),
      pos_pts_(from.pos_pts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&drone_id_, &from.drone_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&nsecs_) -
    reinterpret_cast<char*>(&drone_id_)) + sizeof(nsecs_));
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.Bspline)
}

void Bspline::SharedCtor() {
  ::memset(&drone_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsecs_) -
      reinterpret_cast<char*>(&drone_id_)) + sizeof(nsecs_));
}

Bspline::~Bspline() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.Bspline)
  SharedDtor();
}

void Bspline::SharedDtor() {
}

void Bspline::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Bspline::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bspline& Bspline::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_Bspline.base);
  return *internal_default_instance();
}


void Bspline::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.Bspline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  knots_.Clear();
  yaw_pts_.Clear();
  pos_pts_.Clear();
  ::memset(&drone_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsecs_) -
      reinterpret_cast<char*>(&drone_id_)) + sizeof(nsecs_));
  _internal_metadata_.Clear();
}

bool Bspline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.Bspline)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 drone_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 order = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 traj_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &traj_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yaw_dt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_dt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double knots = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_knots())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 42u, input, this->mutable_knots())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double yaw_pts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_yaw_pts())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 50u, input, this->mutable_yaw_pts())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tzdx.comm_proto.PointXYZ pos_pts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pos_pts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 secs = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &secs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nsecs = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nsecs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.Bspline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.Bspline)
  return false;
#undef DO_
}

void Bspline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.Bspline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 drone_id = 1;
  if (this->drone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->drone_id(), output);
  }

  // int32 order = 2;
  if (this->order() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->order(), output);
  }

  // int32 traj_id = 3;
  if (this->traj_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->traj_id(), output);
  }

  // double yaw_dt = 4;
  if (this->yaw_dt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->yaw_dt(), output);
  }

  // repeated double knots = 5;
  if (this->knots_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _knots_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->knots().data(), this->knots_size(), output);
  }

  // repeated double yaw_pts = 6;
  if (this->yaw_pts_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _yaw_pts_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->yaw_pts().data(), this->yaw_pts_size(), output);
  }

  // repeated .tzdx.comm_proto.PointXYZ pos_pts = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pos_pts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->pos_pts(static_cast<int>(i)),
      output);
  }

  // int32 secs = 8;
  if (this->secs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->secs(), output);
  }

  // int32 nsecs = 9;
  if (this->nsecs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->nsecs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.Bspline)
}

::google::protobuf::uint8* Bspline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.Bspline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 drone_id = 1;
  if (this->drone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->drone_id(), target);
  }

  // int32 order = 2;
  if (this->order() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->order(), target);
  }

  // int32 traj_id = 3;
  if (this->traj_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->traj_id(), target);
  }

  // double yaw_dt = 4;
  if (this->yaw_dt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->yaw_dt(), target);
  }

  // repeated double knots = 5;
  if (this->knots_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _knots_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->knots_, target);
  }

  // repeated double yaw_pts = 6;
  if (this->yaw_pts_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _yaw_pts_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->yaw_pts_, target);
  }

  // repeated .tzdx.comm_proto.PointXYZ pos_pts = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pos_pts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->pos_pts(static_cast<int>(i)), deterministic, target);
  }

  // int32 secs = 8;
  if (this->secs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->secs(), target);
  }

  // int32 nsecs = 9;
  if (this->nsecs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->nsecs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.Bspline)
  return target;
}

size_t Bspline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.Bspline)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double knots = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->knots_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _knots_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double yaw_pts = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->yaw_pts_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _yaw_pts_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .tzdx.comm_proto.PointXYZ pos_pts = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->pos_pts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pos_pts(static_cast<int>(i)));
    }
  }

  // int32 drone_id = 1;
  if (this->drone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->drone_id());
  }

  // int32 order = 2;
  if (this->order() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->order());
  }

  // double yaw_dt = 4;
  if (this->yaw_dt() != 0) {
    total_size += 1 + 8;
  }

  // int32 traj_id = 3;
  if (this->traj_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->traj_id());
  }

  // int32 secs = 8;
  if (this->secs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->secs());
  }

  // int32 nsecs = 9;
  if (this->nsecs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nsecs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Bspline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.Bspline)
  GOOGLE_DCHECK_NE(&from, this);
  const Bspline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bspline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.Bspline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.Bspline)
    MergeFrom(*source);
  }
}

void Bspline::MergeFrom(const Bspline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.Bspline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  knots_.MergeFrom(from.knots_);
  yaw_pts_.MergeFrom(from.yaw_pts_);
  pos_pts_.MergeFrom(from.pos_pts_);
  if (from.drone_id() != 0) {
    set_drone_id(from.drone_id());
  }
  if (from.order() != 0) {
    set_order(from.order());
  }
  if (from.yaw_dt() != 0) {
    set_yaw_dt(from.yaw_dt());
  }
  if (from.traj_id() != 0) {
    set_traj_id(from.traj_id());
  }
  if (from.secs() != 0) {
    set_secs(from.secs());
  }
  if (from.nsecs() != 0) {
    set_nsecs(from.nsecs());
  }
}

void Bspline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.Bspline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bspline::CopyFrom(const Bspline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.Bspline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bspline::IsInitialized() const {
  return true;
}

void Bspline::Swap(Bspline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bspline::InternalSwap(Bspline* other) {
  using std::swap;
  knots_.InternalSwap(&other->knots_);
  yaw_pts_.InternalSwap(&other->yaw_pts_);
  CastToBase(&pos_pts_)->InternalSwap(CastToBase(&other->pos_pts_));
  swap(drone_id_, other->drone_id_);
  swap(order_, other->order_);
  swap(yaw_dt_, other->yaw_dt_);
  swap(traj_id_, other->traj_id_);
  swap(secs_, other->secs_);
  swap(nsecs_, other->nsecs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Bspline::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DroneState::InitAsDefaultInstance() {
  ::tzdx::comm_proto::_DroneState_default_instance_._instance.get_mutable()->goal_posit_ = const_cast< ::tzdx::comm_proto::PointXYZ*>(
      ::tzdx::comm_proto::PointXYZ::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DroneState::kDroneIdFieldNumber;
const int DroneState::kGoalPositFieldNumber;
const int DroneState::kGridIdsFieldNumber;
const int DroneState::kPosFieldNumber;
const int DroneState::kRecentAttemptTimeFieldNumber;
const int DroneState::kRoleFieldNumber;
const int DroneState::kStampFieldNumber;
const int DroneState::kVelFieldNumber;
const int DroneState::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DroneState::DroneState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_DroneState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.DroneState)
}
DroneState::DroneState(const DroneState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      grid_ids_(from.grid_ids_),
      pos_(from.pos_),
      vel_(from.vel_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_goal_posit()) {
    goal_posit_ = new ::tzdx::comm_proto::PointXYZ(*from.goal_posit_);
  } else {
    goal_posit_ = NULL;
  }
  ::memcpy(&drone_id_, &from.drone_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&yaw_) -
    reinterpret_cast<char*>(&drone_id_)) + sizeof(yaw_));
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.DroneState)
}

void DroneState::SharedCtor() {
  ::memset(&goal_posit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&goal_posit_)) + sizeof(yaw_));
}

DroneState::~DroneState() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.DroneState)
  SharedDtor();
}

void DroneState::SharedDtor() {
  if (this != internal_default_instance()) delete goal_posit_;
}

void DroneState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DroneState::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DroneState& DroneState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_DroneState.base);
  return *internal_default_instance();
}


void DroneState::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.DroneState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grid_ids_.Clear();
  pos_.Clear();
  vel_.Clear();
  if (GetArenaNoVirtual() == NULL && goal_posit_ != NULL) {
    delete goal_posit_;
  }
  goal_posit_ = NULL;
  ::memset(&drone_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&drone_id_)) + sizeof(yaw_));
  _internal_metadata_.Clear();
}

bool DroneState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.DroneState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 drone_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tzdx.comm_proto.PointXYZ goal_posit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_goal_posit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 grid_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_grid_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_grid_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_pos())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_pos())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double recent_attempt_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &recent_attempt_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 role = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double stamp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float vel = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_vel())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 66u, input, this->mutable_vel())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yaw = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.DroneState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.DroneState)
  return false;
#undef DO_
}

void DroneState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.DroneState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 drone_id = 1;
  if (this->drone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->drone_id(), output);
  }

  // .tzdx.comm_proto.PointXYZ goal_posit = 2;
  if (this->has_goal_posit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_goal_posit(), output);
  }

  // repeated int32 grid_ids = 3;
  if (this->grid_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _grid_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->grid_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->grid_ids(i), output);
  }

  // repeated float pos = 4;
  if (this->pos_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pos_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->pos().data(), this->pos_size(), output);
  }

  // double recent_attempt_time = 5;
  if (this->recent_attempt_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->recent_attempt_time(), output);
  }

  // int32 role = 6;
  if (this->role() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->role(), output);
  }

  // double stamp = 7;
  if (this->stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->stamp(), output);
  }

  // repeated float vel = 8;
  if (this->vel_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _vel_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->vel().data(), this->vel_size(), output);
  }

  // float yaw = 9;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->yaw(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.DroneState)
}

::google::protobuf::uint8* DroneState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.DroneState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 drone_id = 1;
  if (this->drone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->drone_id(), target);
  }

  // .tzdx.comm_proto.PointXYZ goal_posit = 2;
  if (this->has_goal_posit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_goal_posit(), deterministic, target);
  }

  // repeated int32 grid_ids = 3;
  if (this->grid_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _grid_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->grid_ids_, target);
  }

  // repeated float pos = 4;
  if (this->pos_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pos_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->pos_, target);
  }

  // double recent_attempt_time = 5;
  if (this->recent_attempt_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->recent_attempt_time(), target);
  }

  // int32 role = 6;
  if (this->role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->role(), target);
  }

  // double stamp = 7;
  if (this->stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->stamp(), target);
  }

  // repeated float vel = 8;
  if (this->vel_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _vel_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->vel_, target);
  }

  // float yaw = 9;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->yaw(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.DroneState)
  return target;
}

size_t DroneState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.DroneState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 grid_ids = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->grid_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _grid_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float pos = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->pos_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pos_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float vel = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->vel_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vel_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .tzdx.comm_proto.PointXYZ goal_posit = 2;
  if (this->has_goal_posit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *goal_posit_);
  }

  // int32 drone_id = 1;
  if (this->drone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->drone_id());
  }

  // int32 role = 6;
  if (this->role() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role());
  }

  // double recent_attempt_time = 5;
  if (this->recent_attempt_time() != 0) {
    total_size += 1 + 8;
  }

  // double stamp = 7;
  if (this->stamp() != 0) {
    total_size += 1 + 8;
  }

  // float yaw = 9;
  if (this->yaw() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DroneState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.DroneState)
  GOOGLE_DCHECK_NE(&from, this);
  const DroneState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DroneState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.DroneState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.DroneState)
    MergeFrom(*source);
  }
}

void DroneState::MergeFrom(const DroneState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.DroneState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  grid_ids_.MergeFrom(from.grid_ids_);
  pos_.MergeFrom(from.pos_);
  vel_.MergeFrom(from.vel_);
  if (from.has_goal_posit()) {
    mutable_goal_posit()->::tzdx::comm_proto::PointXYZ::MergeFrom(from.goal_posit());
  }
  if (from.drone_id() != 0) {
    set_drone_id(from.drone_id());
  }
  if (from.role() != 0) {
    set_role(from.role());
  }
  if (from.recent_attempt_time() != 0) {
    set_recent_attempt_time(from.recent_attempt_time());
  }
  if (from.stamp() != 0) {
    set_stamp(from.stamp());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
}

void DroneState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.DroneState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DroneState::CopyFrom(const DroneState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.DroneState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DroneState::IsInitialized() const {
  return true;
}

void DroneState::Swap(DroneState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DroneState::InternalSwap(DroneState* other) {
  using std::swap;
  grid_ids_.InternalSwap(&other->grid_ids_);
  pos_.InternalSwap(&other->pos_);
  vel_.InternalSwap(&other->vel_);
  swap(goal_posit_, other->goal_posit_);
  swap(drone_id_, other->drone_id_);
  swap(role_, other->role_);
  swap(recent_attempt_time_, other->recent_attempt_time_);
  swap(stamp_, other->stamp_);
  swap(yaw_, other->yaw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DroneState::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PairOpt::InitAsDefaultInstance() {
  ::tzdx::comm_proto::_PairOpt_default_instance_._instance.get_mutable()->ego_posit_ = const_cast< ::tzdx::comm_proto::PointXYZ*>(
      ::tzdx::comm_proto::PointXYZ::internal_default_instance());
  ::tzdx::comm_proto::_PairOpt_default_instance_._instance.get_mutable()->other_posit_ = const_cast< ::tzdx::comm_proto::PointXYZ*>(
      ::tzdx::comm_proto::PointXYZ::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PairOpt::kEgoPositFieldNumber;
const int PairOpt::kFromDroneIdFieldNumber;
const int PairOpt::kOtherPositFieldNumber;
const int PairOpt::kStampFieldNumber;
const int PairOpt::kToDroneIdFieldNumber;
const int PairOpt::kEgoIdsFieldNumber;
const int PairOpt::kOtherIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PairOpt::PairOpt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_PairOpt.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.PairOpt)
}
PairOpt::PairOpt(const PairOpt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ego_ids_(from.ego_ids_),
      other_ids_(from.other_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ego_posit()) {
    ego_posit_ = new ::tzdx::comm_proto::PointXYZ(*from.ego_posit_);
  } else {
    ego_posit_ = NULL;
  }
  if (from.has_other_posit()) {
    other_posit_ = new ::tzdx::comm_proto::PointXYZ(*from.other_posit_);
  } else {
    other_posit_ = NULL;
  }
  ::memcpy(&from_drone_id_, &from.from_drone_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stamp_) -
    reinterpret_cast<char*>(&from_drone_id_)) + sizeof(stamp_));
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.PairOpt)
}

void PairOpt::SharedCtor() {
  ::memset(&ego_posit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stamp_) -
      reinterpret_cast<char*>(&ego_posit_)) + sizeof(stamp_));
}

PairOpt::~PairOpt() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.PairOpt)
  SharedDtor();
}

void PairOpt::SharedDtor() {
  if (this != internal_default_instance()) delete ego_posit_;
  if (this != internal_default_instance()) delete other_posit_;
}

void PairOpt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PairOpt::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PairOpt& PairOpt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_PairOpt.base);
  return *internal_default_instance();
}


void PairOpt::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.PairOpt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ego_ids_.Clear();
  other_ids_.Clear();
  if (GetArenaNoVirtual() == NULL && ego_posit_ != NULL) {
    delete ego_posit_;
  }
  ego_posit_ = NULL;
  if (GetArenaNoVirtual() == NULL && other_posit_ != NULL) {
    delete other_posit_;
  }
  other_posit_ = NULL;
  ::memset(&from_drone_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stamp_) -
      reinterpret_cast<char*>(&from_drone_id_)) + sizeof(stamp_));
  _internal_metadata_.Clear();
}

bool PairOpt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.PairOpt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tzdx.comm_proto.PointXYZ ego_posit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ego_posit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 from_drone_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_drone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tzdx.comm_proto.PointXYZ other_posit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_other_posit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double stamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 to_drone_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &to_drone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 ego_ids = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_ego_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_ego_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 other_ids = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_other_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_other_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.PairOpt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.PairOpt)
  return false;
#undef DO_
}

void PairOpt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.PairOpt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tzdx.comm_proto.PointXYZ ego_posit = 1;
  if (this->has_ego_posit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_ego_posit(), output);
  }

  // int32 from_drone_id = 2;
  if (this->from_drone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->from_drone_id(), output);
  }

  // .tzdx.comm_proto.PointXYZ other_posit = 3;
  if (this->has_other_posit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_other_posit(), output);
  }

  // double stamp = 4;
  if (this->stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->stamp(), output);
  }

  // int32 to_drone_id = 5;
  if (this->to_drone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->to_drone_id(), output);
  }

  // repeated int32 ego_ids = 6;
  if (this->ego_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _ego_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->ego_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->ego_ids(i), output);
  }

  // repeated int32 other_ids = 7;
  if (this->other_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _other_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->other_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->other_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.PairOpt)
}

::google::protobuf::uint8* PairOpt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.PairOpt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tzdx.comm_proto.PointXYZ ego_posit = 1;
  if (this->has_ego_posit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_ego_posit(), deterministic, target);
  }

  // int32 from_drone_id = 2;
  if (this->from_drone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->from_drone_id(), target);
  }

  // .tzdx.comm_proto.PointXYZ other_posit = 3;
  if (this->has_other_posit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_other_posit(), deterministic, target);
  }

  // double stamp = 4;
  if (this->stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->stamp(), target);
  }

  // int32 to_drone_id = 5;
  if (this->to_drone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->to_drone_id(), target);
  }

  // repeated int32 ego_ids = 6;
  if (this->ego_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _ego_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->ego_ids_, target);
  }

  // repeated int32 other_ids = 7;
  if (this->other_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _other_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->other_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.PairOpt)
  return target;
}

size_t PairOpt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.PairOpt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 ego_ids = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->ego_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ego_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 other_ids = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->other_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _other_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .tzdx.comm_proto.PointXYZ ego_posit = 1;
  if (this->has_ego_posit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ego_posit_);
  }

  // .tzdx.comm_proto.PointXYZ other_posit = 3;
  if (this->has_other_posit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *other_posit_);
  }

  // int32 from_drone_id = 2;
  if (this->from_drone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_drone_id());
  }

  // int32 to_drone_id = 5;
  if (this->to_drone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->to_drone_id());
  }

  // double stamp = 4;
  if (this->stamp() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PairOpt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.PairOpt)
  GOOGLE_DCHECK_NE(&from, this);
  const PairOpt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PairOpt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.PairOpt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.PairOpt)
    MergeFrom(*source);
  }
}

void PairOpt::MergeFrom(const PairOpt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.PairOpt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ego_ids_.MergeFrom(from.ego_ids_);
  other_ids_.MergeFrom(from.other_ids_);
  if (from.has_ego_posit()) {
    mutable_ego_posit()->::tzdx::comm_proto::PointXYZ::MergeFrom(from.ego_posit());
  }
  if (from.has_other_posit()) {
    mutable_other_posit()->::tzdx::comm_proto::PointXYZ::MergeFrom(from.other_posit());
  }
  if (from.from_drone_id() != 0) {
    set_from_drone_id(from.from_drone_id());
  }
  if (from.to_drone_id() != 0) {
    set_to_drone_id(from.to_drone_id());
  }
  if (from.stamp() != 0) {
    set_stamp(from.stamp());
  }
}

void PairOpt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.PairOpt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PairOpt::CopyFrom(const PairOpt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.PairOpt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PairOpt::IsInitialized() const {
  return true;
}

void PairOpt::Swap(PairOpt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PairOpt::InternalSwap(PairOpt* other) {
  using std::swap;
  ego_ids_.InternalSwap(&other->ego_ids_);
  other_ids_.InternalSwap(&other->other_ids_);
  swap(ego_posit_, other->ego_posit_);
  swap(other_posit_, other->other_posit_);
  swap(from_drone_id_, other->from_drone_id_);
  swap(to_drone_id_, other->to_drone_id_);
  swap(stamp_, other->stamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PairOpt::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PairOptRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PairOptRes::kFromDroneIdFieldNumber;
const int PairOptRes::kStampFieldNumber;
const int PairOptRes::kStatusFieldNumber;
const int PairOptRes::kToDroneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PairOptRes::PairOptRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_PairOptRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.PairOptRes)
}
PairOptRes::PairOptRes(const PairOptRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stamp_, &from.stamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&to_drone_id_) -
    reinterpret_cast<char*>(&stamp_)) + sizeof(to_drone_id_));
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.PairOptRes)
}

void PairOptRes::SharedCtor() {
  ::memset(&stamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_drone_id_) -
      reinterpret_cast<char*>(&stamp_)) + sizeof(to_drone_id_));
}

PairOptRes::~PairOptRes() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.PairOptRes)
  SharedDtor();
}

void PairOptRes::SharedDtor() {
}

void PairOptRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PairOptRes::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PairOptRes& PairOptRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_PairOptRes.base);
  return *internal_default_instance();
}


void PairOptRes::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.PairOptRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&stamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_drone_id_) -
      reinterpret_cast<char*>(&stamp_)) + sizeof(to_drone_id_));
  _internal_metadata_.Clear();
}

bool PairOptRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.PairOptRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 from_drone_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_drone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double stamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 to_drone_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &to_drone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.PairOptRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.PairOptRes)
  return false;
#undef DO_
}

void PairOptRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.PairOptRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 from_drone_id = 1;
  if (this->from_drone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->from_drone_id(), output);
  }

  // double stamp = 2;
  if (this->stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->stamp(), output);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // int32 to_drone_id = 4;
  if (this->to_drone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->to_drone_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.PairOptRes)
}

::google::protobuf::uint8* PairOptRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.PairOptRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 from_drone_id = 1;
  if (this->from_drone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->from_drone_id(), target);
  }

  // double stamp = 2;
  if (this->stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->stamp(), target);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // int32 to_drone_id = 4;
  if (this->to_drone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->to_drone_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.PairOptRes)
  return target;
}

size_t PairOptRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.PairOptRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double stamp = 2;
  if (this->stamp() != 0) {
    total_size += 1 + 8;
  }

  // int32 from_drone_id = 1;
  if (this->from_drone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_drone_id());
  }

  // int32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // int32 to_drone_id = 4;
  if (this->to_drone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->to_drone_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PairOptRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.PairOptRes)
  GOOGLE_DCHECK_NE(&from, this);
  const PairOptRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PairOptRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.PairOptRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.PairOptRes)
    MergeFrom(*source);
  }
}

void PairOptRes::MergeFrom(const PairOptRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.PairOptRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stamp() != 0) {
    set_stamp(from.stamp());
  }
  if (from.from_drone_id() != 0) {
    set_from_drone_id(from.from_drone_id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.to_drone_id() != 0) {
    set_to_drone_id(from.to_drone_id());
  }
}

void PairOptRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.PairOptRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PairOptRes::CopyFrom(const PairOptRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.PairOptRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PairOptRes::IsInitialized() const {
  return true;
}

void PairOptRes::Swap(PairOptRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PairOptRes::InternalSwap(PairOptRes* other) {
  using std::swap;
  swap(stamp_, other->stamp_);
  swap(from_drone_id_, other->from_drone_id_);
  swap(status_, other->status_);
  swap(to_drone_id_, other->to_drone_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PairOptRes::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExplorationMsg::InitAsDefaultInstance() {
  ::tzdx::comm_proto::_ExplorationMsg_default_instance_._instance.get_mutable()->chunkdata_ = const_cast< ::tzdx::comm_proto::ChunkData*>(
      ::tzdx::comm_proto::ChunkData::internal_default_instance());
  ::tzdx::comm_proto::_ExplorationMsg_default_instance_._instance.get_mutable()->chunkstamps_ = const_cast< ::tzdx::comm_proto::ChunkStamps*>(
      ::tzdx::comm_proto::ChunkStamps::internal_default_instance());
  ::tzdx::comm_proto::_ExplorationMsg_default_instance_._instance.get_mutable()->bsp_ = const_cast< ::tzdx::comm_proto::Bspline*>(
      ::tzdx::comm_proto::Bspline::internal_default_instance());
  ::tzdx::comm_proto::_ExplorationMsg_default_instance_._instance.get_mutable()->dronestate_ = const_cast< ::tzdx::comm_proto::DroneState*>(
      ::tzdx::comm_proto::DroneState::internal_default_instance());
  ::tzdx::comm_proto::_ExplorationMsg_default_instance_._instance.get_mutable()->pairopt_ = const_cast< ::tzdx::comm_proto::PairOpt*>(
      ::tzdx::comm_proto::PairOpt::internal_default_instance());
  ::tzdx::comm_proto::_ExplorationMsg_default_instance_._instance.get_mutable()->pairoptres_ = const_cast< ::tzdx::comm_proto::PairOptRes*>(
      ::tzdx::comm_proto::PairOptRes::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExplorationMsg::kChunkdataFieldNumber;
const int ExplorationMsg::kChunkstampsFieldNumber;
const int ExplorationMsg::kBspFieldNumber;
const int ExplorationMsg::kDronestateFieldNumber;
const int ExplorationMsg::kPairoptFieldNumber;
const int ExplorationMsg::kPairoptresFieldNumber;
const int ExplorationMsg::kFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExplorationMsg::ExplorationMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_ExplorationMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.ExplorationMsg)
}
ExplorationMsg::ExplorationMsg(const ExplorationMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      flag_(from.flag_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chunkdata()) {
    chunkdata_ = new ::tzdx::comm_proto::ChunkData(*from.chunkdata_);
  } else {
    chunkdata_ = NULL;
  }
  if (from.has_chunkstamps()) {
    chunkstamps_ = new ::tzdx::comm_proto::ChunkStamps(*from.chunkstamps_);
  } else {
    chunkstamps_ = NULL;
  }
  if (from.has_bsp()) {
    bsp_ = new ::tzdx::comm_proto::Bspline(*from.bsp_);
  } else {
    bsp_ = NULL;
  }
  if (from.has_dronestate()) {
    dronestate_ = new ::tzdx::comm_proto::DroneState(*from.dronestate_);
  } else {
    dronestate_ = NULL;
  }
  if (from.has_pairopt()) {
    pairopt_ = new ::tzdx::comm_proto::PairOpt(*from.pairopt_);
  } else {
    pairopt_ = NULL;
  }
  if (from.has_pairoptres()) {
    pairoptres_ = new ::tzdx::comm_proto::PairOptRes(*from.pairoptres_);
  } else {
    pairoptres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.ExplorationMsg)
}

void ExplorationMsg::SharedCtor() {
  ::memset(&chunkdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pairoptres_) -
      reinterpret_cast<char*>(&chunkdata_)) + sizeof(pairoptres_));
}

ExplorationMsg::~ExplorationMsg() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.ExplorationMsg)
  SharedDtor();
}

void ExplorationMsg::SharedDtor() {
  if (this != internal_default_instance()) delete chunkdata_;
  if (this != internal_default_instance()) delete chunkstamps_;
  if (this != internal_default_instance()) delete bsp_;
  if (this != internal_default_instance()) delete dronestate_;
  if (this != internal_default_instance()) delete pairopt_;
  if (this != internal_default_instance()) delete pairoptres_;
}

void ExplorationMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExplorationMsg::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExplorationMsg& ExplorationMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_ExplorationMsg.base);
  return *internal_default_instance();
}


void ExplorationMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.ExplorationMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flag_.Clear();
  if (GetArenaNoVirtual() == NULL && chunkdata_ != NULL) {
    delete chunkdata_;
  }
  chunkdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && chunkstamps_ != NULL) {
    delete chunkstamps_;
  }
  chunkstamps_ = NULL;
  if (GetArenaNoVirtual() == NULL && bsp_ != NULL) {
    delete bsp_;
  }
  bsp_ = NULL;
  if (GetArenaNoVirtual() == NULL && dronestate_ != NULL) {
    delete dronestate_;
  }
  dronestate_ = NULL;
  if (GetArenaNoVirtual() == NULL && pairopt_ != NULL) {
    delete pairopt_;
  }
  pairopt_ = NULL;
  if (GetArenaNoVirtual() == NULL && pairoptres_ != NULL) {
    delete pairoptres_;
  }
  pairoptres_ = NULL;
  _internal_metadata_.Clear();
}

bool ExplorationMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.ExplorationMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tzdx.comm_proto.ChunkData chunkdata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chunkdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tzdx.comm_proto.ChunkStamps chunkstamps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chunkstamps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tzdx.comm_proto.Bspline bsp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tzdx.comm_proto.DroneState dronestate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dronestate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tzdx.comm_proto.PairOpt pairopt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pairopt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tzdx.comm_proto.PairOptRes pairoptres = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pairoptres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 flag = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_flag())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_flag())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.ExplorationMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.ExplorationMsg)
  return false;
#undef DO_
}

void ExplorationMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.ExplorationMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tzdx.comm_proto.ChunkData chunkdata = 1;
  if (this->has_chunkdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_chunkdata(), output);
  }

  // .tzdx.comm_proto.ChunkStamps chunkstamps = 2;
  if (this->has_chunkstamps()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_chunkstamps(), output);
  }

  // .tzdx.comm_proto.Bspline bsp = 3;
  if (this->has_bsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_bsp(), output);
  }

  // .tzdx.comm_proto.DroneState dronestate = 4;
  if (this->has_dronestate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_dronestate(), output);
  }

  // .tzdx.comm_proto.PairOpt pairopt = 5;
  if (this->has_pairopt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_pairopt(), output);
  }

  // .tzdx.comm_proto.PairOptRes pairoptres = 6;
  if (this->has_pairoptres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_pairoptres(), output);
  }

  // repeated int32 flag = 7;
  if (this->flag_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _flag_cached_byte_size_));
  }
  for (int i = 0, n = this->flag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->flag(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.ExplorationMsg)
}

::google::protobuf::uint8* ExplorationMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.ExplorationMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tzdx.comm_proto.ChunkData chunkdata = 1;
  if (this->has_chunkdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_chunkdata(), deterministic, target);
  }

  // .tzdx.comm_proto.ChunkStamps chunkstamps = 2;
  if (this->has_chunkstamps()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_chunkstamps(), deterministic, target);
  }

  // .tzdx.comm_proto.Bspline bsp = 3;
  if (this->has_bsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_bsp(), deterministic, target);
  }

  // .tzdx.comm_proto.DroneState dronestate = 4;
  if (this->has_dronestate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_dronestate(), deterministic, target);
  }

  // .tzdx.comm_proto.PairOpt pairopt = 5;
  if (this->has_pairopt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_pairopt(), deterministic, target);
  }

  // .tzdx.comm_proto.PairOptRes pairoptres = 6;
  if (this->has_pairoptres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_pairoptres(), deterministic, target);
  }

  // repeated int32 flag = 7;
  if (this->flag_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _flag_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->flag_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.ExplorationMsg)
  return target;
}

size_t ExplorationMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.ExplorationMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 flag = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->flag_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _flag_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .tzdx.comm_proto.ChunkData chunkdata = 1;
  if (this->has_chunkdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *chunkdata_);
  }

  // .tzdx.comm_proto.ChunkStamps chunkstamps = 2;
  if (this->has_chunkstamps()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *chunkstamps_);
  }

  // .tzdx.comm_proto.Bspline bsp = 3;
  if (this->has_bsp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bsp_);
  }

  // .tzdx.comm_proto.DroneState dronestate = 4;
  if (this->has_dronestate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dronestate_);
  }

  // .tzdx.comm_proto.PairOpt pairopt = 5;
  if (this->has_pairopt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pairopt_);
  }

  // .tzdx.comm_proto.PairOptRes pairoptres = 6;
  if (this->has_pairoptres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pairoptres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExplorationMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.ExplorationMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ExplorationMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExplorationMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.ExplorationMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.ExplorationMsg)
    MergeFrom(*source);
  }
}

void ExplorationMsg::MergeFrom(const ExplorationMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.ExplorationMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  flag_.MergeFrom(from.flag_);
  if (from.has_chunkdata()) {
    mutable_chunkdata()->::tzdx::comm_proto::ChunkData::MergeFrom(from.chunkdata());
  }
  if (from.has_chunkstamps()) {
    mutable_chunkstamps()->::tzdx::comm_proto::ChunkStamps::MergeFrom(from.chunkstamps());
  }
  if (from.has_bsp()) {
    mutable_bsp()->::tzdx::comm_proto::Bspline::MergeFrom(from.bsp());
  }
  if (from.has_dronestate()) {
    mutable_dronestate()->::tzdx::comm_proto::DroneState::MergeFrom(from.dronestate());
  }
  if (from.has_pairopt()) {
    mutable_pairopt()->::tzdx::comm_proto::PairOpt::MergeFrom(from.pairopt());
  }
  if (from.has_pairoptres()) {
    mutable_pairoptres()->::tzdx::comm_proto::PairOptRes::MergeFrom(from.pairoptres());
  }
}

void ExplorationMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.ExplorationMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExplorationMsg::CopyFrom(const ExplorationMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.ExplorationMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExplorationMsg::IsInitialized() const {
  return true;
}

void ExplorationMsg::Swap(ExplorationMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExplorationMsg::InternalSwap(ExplorationMsg* other) {
  using std::swap;
  flag_.InternalSwap(&other->flag_);
  swap(chunkdata_, other->chunkdata_);
  swap(chunkstamps_, other->chunkstamps_);
  swap(bsp_, other->bsp_);
  swap(dronestate_, other->dronestate_);
  swap(pairopt_, other->pairopt_);
  swap(pairoptres_, other->pairoptres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExplorationMsg::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BasePacket::InitAsDefaultInstance() {
  ::tzdx::comm_proto::_BasePacket_default_instance_.pcl_ = const_cast< ::tzdx::comm_proto::PointCloudXYZIBody*>(
      ::tzdx::comm_proto::PointCloudXYZIBody::internal_default_instance());
  ::tzdx::comm_proto::_BasePacket_default_instance_.expmsg_ = const_cast< ::tzdx::comm_proto::ExplorationMsg*>(
      ::tzdx::comm_proto::ExplorationMsg::internal_default_instance());
}
void BasePacket::set_allocated_pcl(::tzdx::comm_proto::PointCloudXYZIBody* pcl) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (pcl) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pcl = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pcl, submessage_arena);
    }
    set_has_pcl();
    body_.pcl_ = pcl;
  }
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.BasePacket.pcl)
}
void BasePacket::set_allocated_expmsg(::tzdx::comm_proto::ExplorationMsg* expmsg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (expmsg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expmsg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expmsg, submessage_arena);
    }
    set_has_expmsg();
    body_.expmsg_ = expmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:tzdx.comm_proto.BasePacket.expmsg)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasePacket::kTypeFieldNumber;
const int BasePacket::kSenderFieldNumber;
const int BasePacket::kSeqFieldNumber;
const int BasePacket::kFrameFieldNumber;
const int BasePacket::kSecondFieldNumber;
const int BasePacket::kNanosecondFieldNumber;
const int BasePacket::kPclFieldNumber;
const int BasePacket::kExpmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasePacket::BasePacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_5fdata_2eproto::scc_info_BasePacket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tzdx.comm_proto.BasePacket)
}
BasePacket::BasePacket(const BasePacket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender().size() > 0) {
    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.frame().size() > 0) {
    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&nanosecond_) -
    reinterpret_cast<char*>(&type_)) + sizeof(nanosecond_));
  clear_has_body();
  switch (from.body_case()) {
    case kPcl: {
      mutable_pcl()->::tzdx::comm_proto::PointCloudXYZIBody::MergeFrom(from.pcl());
      break;
    }
    case kExpmsg: {
      mutable_expmsg()->::tzdx::comm_proto::ExplorationMsg::MergeFrom(from.expmsg());
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tzdx.comm_proto.BasePacket)
}

void BasePacket::SharedCtor() {
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanosecond_) -
      reinterpret_cast<char*>(&type_)) + sizeof(nanosecond_));
  clear_has_body();
}

BasePacket::~BasePacket() {
  // @@protoc_insertion_point(destructor:tzdx.comm_proto.BasePacket)
  SharedDtor();
}

void BasePacket::SharedDtor() {
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_body()) {
    clear_body();
  }
}

void BasePacket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BasePacket::descriptor() {
  ::protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BasePacket& BasePacket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_5fdata_2eproto::scc_info_BasePacket.base);
  return *internal_default_instance();
}


void BasePacket::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:tzdx.comm_proto.BasePacket)
  switch (body_case()) {
    case kPcl: {
      delete body_.pcl_;
      break;
    }
    case kExpmsg: {
      delete body_.expmsg_;
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BODY_NOT_SET;
}


void BasePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:tzdx.comm_proto.BasePacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanosecond_) -
      reinterpret_cast<char*>(&type_)) + sizeof(nanosecond_));
  clear_body();
  _internal_metadata_.Clear();
}

bool BasePacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tzdx.comm_proto.BasePacket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tzdx.comm_proto.PacketType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::tzdx::comm_proto::PacketType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), static_cast<int>(this->sender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tzdx.comm_proto.BasePacket.sender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 seq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string frame = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_frame()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->frame().data(), static_cast<int>(this->frame().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tzdx.comm_proto.BasePacket.frame"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 second = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nanosecond = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nanosecond_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tzdx.comm_proto.PointCloudXYZIBody pcl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pcl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tzdx.comm_proto.ExplorationMsg expmsg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tzdx.comm_proto.BasePacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tzdx.comm_proto.BasePacket)
  return false;
#undef DO_
}

void BasePacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tzdx.comm_proto.BasePacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tzdx.comm_proto.PacketType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tzdx.comm_proto.BasePacket.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sender(), output);
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->seq(), output);
  }

  // string frame = 4;
  if (this->frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frame().data(), static_cast<int>(this->frame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tzdx.comm_proto.BasePacket.frame");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->frame(), output);
  }

  // uint32 second = 5;
  if (this->second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->second(), output);
  }

  // uint32 nanosecond = 6;
  if (this->nanosecond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->nanosecond(), output);
  }

  // .tzdx.comm_proto.PointCloudXYZIBody pcl = 7;
  if (has_pcl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_pcl(), output);
  }

  // .tzdx.comm_proto.ExplorationMsg expmsg = 8;
  if (has_expmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_expmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tzdx.comm_proto.BasePacket)
}

::google::protobuf::uint8* BasePacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tzdx.comm_proto.BasePacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tzdx.comm_proto.PacketType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tzdx.comm_proto.BasePacket.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sender(), target);
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->seq(), target);
  }

  // string frame = 4;
  if (this->frame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frame().data(), static_cast<int>(this->frame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tzdx.comm_proto.BasePacket.frame");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->frame(), target);
  }

  // uint32 second = 5;
  if (this->second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->second(), target);
  }

  // uint32 nanosecond = 6;
  if (this->nanosecond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->nanosecond(), target);
  }

  // .tzdx.comm_proto.PointCloudXYZIBody pcl = 7;
  if (has_pcl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_pcl(), deterministic, target);
  }

  // .tzdx.comm_proto.ExplorationMsg expmsg = 8;
  if (has_expmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_expmsg(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tzdx.comm_proto.BasePacket)
  return target;
}

size_t BasePacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tzdx.comm_proto.BasePacket)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sender = 2;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // string frame = 4;
  if (this->frame().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->frame());
  }

  // .tzdx.comm_proto.PacketType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 seq = 3;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seq());
  }

  // uint32 second = 5;
  if (this->second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->second());
  }

  // uint32 nanosecond = 6;
  if (this->nanosecond() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nanosecond());
  }

  switch (body_case()) {
    // .tzdx.comm_proto.PointCloudXYZIBody pcl = 7;
    case kPcl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.pcl_);
      break;
    }
    // .tzdx.comm_proto.ExplorationMsg expmsg = 8;
    case kExpmsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.expmsg_);
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BasePacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tzdx.comm_proto.BasePacket)
  GOOGLE_DCHECK_NE(&from, this);
  const BasePacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BasePacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tzdx.comm_proto.BasePacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tzdx.comm_proto.BasePacket)
    MergeFrom(*source);
  }
}

void BasePacket::MergeFrom(const BasePacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tzdx.comm_proto.BasePacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.frame().size() > 0) {

    frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.second() != 0) {
    set_second(from.second());
  }
  if (from.nanosecond() != 0) {
    set_nanosecond(from.nanosecond());
  }
  switch (from.body_case()) {
    case kPcl: {
      mutable_pcl()->::tzdx::comm_proto::PointCloudXYZIBody::MergeFrom(from.pcl());
      break;
    }
    case kExpmsg: {
      mutable_expmsg()->::tzdx::comm_proto::ExplorationMsg::MergeFrom(from.expmsg());
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
}

void BasePacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tzdx.comm_proto.BasePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasePacket::CopyFrom(const BasePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tzdx.comm_proto.BasePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasePacket::IsInitialized() const {
  return true;
}

void BasePacket::Swap(BasePacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasePacket::InternalSwap(BasePacket* other) {
  using std::swap;
  sender_.Swap(&other->sender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  frame_.Swap(&other->frame_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(seq_, other->seq_);
  swap(second_, other->second_);
  swap(nanosecond_, other->nanosecond_);
  swap(body_, other->body_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BasePacket::GetMetadata() const {
  protobuf_base_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace comm_proto
}  // namespace tzdx
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::PointXYZI* Arena::CreateMaybeMessage< ::tzdx::comm_proto::PointXYZI >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::PointXYZI >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::PointCloudXYZIBody* Arena::CreateMaybeMessage< ::tzdx::comm_proto::PointCloudXYZIBody >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::PointCloudXYZIBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::IdxList* Arena::CreateMaybeMessage< ::tzdx::comm_proto::IdxList >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::IdxList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::PointXYZ* Arena::CreateMaybeMessage< ::tzdx::comm_proto::PointXYZ >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::PointXYZ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::ChunkData* Arena::CreateMaybeMessage< ::tzdx::comm_proto::ChunkData >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::ChunkData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::ChunkStamps* Arena::CreateMaybeMessage< ::tzdx::comm_proto::ChunkStamps >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::ChunkStamps >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::Bspline* Arena::CreateMaybeMessage< ::tzdx::comm_proto::Bspline >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::Bspline >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::DroneState* Arena::CreateMaybeMessage< ::tzdx::comm_proto::DroneState >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::DroneState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::PairOpt* Arena::CreateMaybeMessage< ::tzdx::comm_proto::PairOpt >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::PairOpt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::PairOptRes* Arena::CreateMaybeMessage< ::tzdx::comm_proto::PairOptRes >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::PairOptRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::ExplorationMsg* Arena::CreateMaybeMessage< ::tzdx::comm_proto::ExplorationMsg >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::ExplorationMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tzdx::comm_proto::BasePacket* Arena::CreateMaybeMessage< ::tzdx::comm_proto::BasePacket >(Arena* arena) {
  return Arena::CreateInternal< ::tzdx::comm_proto::BasePacket >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
